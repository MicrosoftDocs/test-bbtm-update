{
    "Slug": "adal-net-3-14-1-released",
    "Title": "ADAL .NET 3.14.1 released",
    "Summary": "ADAL.NET is an authentication library which enables developers to acquire tokens from Azure AD and ADFS, to be used to access Microsoft APIs orâ€¦",
    "Content": "<p>ADAL.NET, delivered as a nuget package named <a href=\"https://www.nuget.org/packages/Microsoft.IdentityModel.Clients.ActiveDirectory/\">Microsoft.IdentityModel.Clients.ActiveDirectory</a>, is an authentication library which enables developers to acquire tokens from Azure AD (Active Directory) and ADFS, to be used to access Microsoft APIs or applications registered with Azure AD. ADAL.NET is available on several .NET platforms, including desktop, Universal Windows Platform, Xamarin / Android, Xamarin iOS, Portable Class Libraries, and .NET Core. It supports a number of <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-authentication-scenarios\">authentication scenarios</a>, involving native applications (desktop or device) or private applications (Web API). Authentication can leverage users credentials or application secrets.</p>\n\n<h2>What&rsquo;s new - Support for Client assertion certificates in .Net Core</h2>\n\n<p>Client credential authentication is used by a confidential client application such as a daemon or web service to access resources using its own identity, rather than the user&rsquo;s identity. The application can use either a shared secret or a client certificate to authenticate itself. Learn more about <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-service-to-service\">service to service calls using client credentials</a>.</p>\n\n<p>Previously, client certificates were only available on .Net 4.5. In ADAL .NET 3.14 we now support the certificate-based scenario on .NET Core as well. The <a href=\"https://github.com/Azure-Samples/active-directory-dotnetcore-daemon-certificate-credential\">.NET core daemon application sample</a> shows how a .NET core client console application can access an ASP.NET Core API protected with AzureAD.</p>\n\n<h2>Other changes</h2>\n\n<p>In this release, the &ldquo;old&rdquo; common (platform-independent) PCL library is now a .NET standard 1.1 library, and several known issues have been resolved:</p>\n\n<ul>\n\t<li>Fixed the issue where silently logging in with an expired refresh token could cause a null reference exception.</li>\n\t<li>Fixed the issue in federated tenant scenarios (GitHub issue <a href=\"https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FAzureAD%2Fazure-activedirectory-library-for-dotnet%2Fissues%2F401&amp;data=02%7C01%7CJean-Marc.Prieur%40microsoft.com%7C184bfb46512347abf97e08d4bc9ec333%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636340837445375443&amp;sdata=YiQytQcYR%2F8aJ5puOrfll9rP98y4oGIALazadDkYhq4%3D&amp;reserved=0\">#401</a>).</li>\n\t<li>Ported the ADAL.PCL project to .NET Standard 1.1 project.</li>\n\t<li>Ported the ADAL.CoreCLR project to .NET Standard 1.3 project.</li>\n\t<li>Authenticode-signed the assemblies with SHA-256 certificate.</li>\n</ul>\n\n<h2>In closing</h2>\n\n<p>As usual we&rsquo;d love to hear your feedback:</p>\n\n<ul>\n\t<li>Ask questions on <a href=\"https://stackoverflow.com/questions/tagged/adal\">Stack Overflow</a> using the ADAL tag. We highly recommend you ask your questions on Stack Overflow first and browse existing issues to see if someone has asked your question before.</li>\n\t<li>Use <a href=\"https://github.com/AzureAD/azure-activedirectory-library-for-dotnet/issues\">GitHub Issues</a> on the ADAL.Net open source repository to report bugs or request features.</li>\n\t<li>Use the <a href=\"https://feedback.azure.com/forums/169401-azure-active-directory\">User Voice page</a> to provide recommendations and/or feedback.</li>\n</ul>\n"
}