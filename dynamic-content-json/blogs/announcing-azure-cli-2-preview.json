{
    "Slug": "announcing-azure-cli-2-preview",
    "Title": "Announcing Azure Command-Line Interface (Azure CLI) 2.0 Preview",
    "Summary": "We would like to introduce you to our next generation command-line tools for Azure: Azure Command-Line Interface (Azure CLI) 2.0 Preview.",
    "Content": "<p>With the continued growth of Azure, we&rsquo;ve seen a lot of customers using our command-line tools, particularly the Windows PowerShell tools and our Azure XPlat command-line interface (CLI).&nbsp; We&rsquo;ve received a lot of feedback on the great productivity provided by command-line tools, but have also heard, especially from customers working with Linux, about our XPlat CLI and its poor integration with popular Linux command-line tools as well as difficulties with installing and maintaining the Node environment (on which it was based).</p>\n\n<p>Based on this feedback - along with the growth in the Azure Resource Manager-based configuration model - we improved the CLI experience and now provide a great experience for Azure. Starting today, we&rsquo;re making this new CLI available.&nbsp;We&rsquo;re calling it the <strong>Azure Command-Line Interface (Azure CLI) 2.0 Preview</strong>, now available as a beta on <a href=\"https://github.com/azure/azure-cli\">GitHub</a>.&nbsp;<a href=\"https://github.com/azure/azure-cli\">Please try it out</a> and give us your feedback!</p>\n\n<p>Now, if you&rsquo;re interested in how we approached this project and what it means for you, read on!</p>\n\n<h2>What Makes a Great, Modern CLI?</h2>\n\n<p>As we set out to develop our next generation of command-line tools, we quickly settled on some guiding principles:</p>\n\n<p><strong>It must be natural and easy to install:</strong> Regardless of your platform, our CLI should be installed from where you expect it, be it from &ldquo;brew install azure-cli&rdquo; on a MacBook, or from &ldquo;apt-get install azure-cli&rdquo; for BASH on Windows (coming soon).</p>\n\n<p><strong>It must be consistent with POSIX tools</strong>: Success with command-line tools is the result of the ease and predictability that comes with the implementation of well-understood standards.</p>\n\n<p><strong>It must be part of the open source ecosystem</strong>: The value of open source comes from the community and the amazing features and integrations they develop, from DevOps (Chef, Ansible) solutions to query languages (JMESPath).</p>\n\n<p><strong>It must be evergreen and current with Azure:</strong> In an age of continuous delivery, it&#39;s not enough to simply deploy a service.&nbsp;We must have up-to-date tools that let our customers immediately take advantage of that service.&nbsp;</p>\n\n<p>As we applied these principles, we realized that the scope of improvements went beyond a few breaking changes, and when combined with the feedback we&rsquo;ve received about our XPlat CLI, it made sense to start from the ground up.&nbsp;This choice allowed us to focus exclusively on our ARM management and address another common point of feedback: the ASM/ARM &ldquo;config mode&rdquo; switch of our XPlat CLI.</p>\n\n<h2>Introducing the Azure CLI 2.0 Preview</h2>\n\n<p>While we are building out support for core Azure services at this time, we would like to introduce you to the next generation of our command-line tool: <strong>Azure CLI 2.0 Preview.</strong></p>\n\n<p><img alt=\"AzBlogAnimation4\" height=\"300\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/191e0818-5d07-4951-854d-10812518bbc2.gif\" style=\"display: inline\" title=\"AzBlogAnimation4\" width=\"600\"></p>\n\n<h3>Get Started without delay with a quick and easy install, regardless of platform</h3>\n\n<p>Your tools should always be easy to access and install, whether you work in operations or development.&nbsp;Soon, <strong>Azure CLI 2.0 Preview will be </strong>available on all popular platform package services.</p>\n\n<h3>Love using command-line tools such as GREP, AWK, JQ?&nbsp; So do we!</h3>\n\n<p>Command-line tools are the most productive when they work together well. The <strong>Azure CLI 2.0 Preview</strong> provides clean and pipe-able outputs for interacting with popular command-line tools, such as grep, cut, and jq.</p>\n\n<h3>Feel like an Azure Ninja with consistent patterns and help at your fingertips</h3>\n\n<p>Getting started in the cloud can feel overwhelming, given all the tools and options available, but the <strong>Azure CLI 2.0 Preview </strong>can help you on your journey, guiding you with examples and educational content for common commands.&nbsp; We&#39;ve completely redesigned our help system with improved in-tool help.</p>\n\n<p>In future releases, we will expand our documentation to include detailed man-pages and online documentation in popular repositories.</p>\n\n<h3>The less you type, the more productive you are</h3>\n\n<p>We offer &#39;tab completion&#39; for commands and parameter names. This makes it easy to find the right command or parameter without interrupting your flow.&nbsp;For parameters that include known choices, as well as resource groups and resource names, you can use tab completion to look-up appropriate values.</p>\n\n<h2>Moving to the Azure CLI 2.0 Preview</h2>\n\n<p>What does this mean to existing users of the XPlat CLI? We&#39;re glad you asked! Here are&nbsp;a few key answers to some questions we&#39;ve anticipated:</p>\n\n<p><strong>You don&#39;t need to change anything</strong>: The XPlat CLI will continue to work and scripts will continue to function.&nbsp;We are continuing to support and add new features to the CLI.</p>\n\n<p><strong>You can install and use both CLIs side-by-side</strong>: Credentials and some defaults, such as default subscriptions, are shared between CLIs.&nbsp;This allows you to try out the CLI 2.0 Preview while leaving your existing Azure XPlat CLI installation untouched.&nbsp;</p>\n\n<p><strong>No, ASM/Classic mode is not supported in the Azure CLI 2.0 Preview</strong>: We&#39;ve designed around ARM primitives, such as resource groups and templates. ASM/Classic mode will continue to be supported by the XPlat CLI.</p>\n\n<p><strong>Yes, we&#39;ll help you along the way</strong>: While we can&#39;t convert scripts for you, we&#39;ve created an online conversion guide, including a <a href=\"https://github.com/Azure/azure-cli/blob/master/doc/azure2az_commands.rst\">conversion table</a> that maps commands between the CLIs.</p>\n\n<blockquote>\n<p>Please note: credential sharing with the Azure XPlat CLI requires version 0.10.5 or later.</p>\n</blockquote>\n\n<h1>Interested in trying us out?</h1>\n\n<p>We&#39;re on <a href=\"https://github.com/azure/azure-cli\">GitHub</a>, but we also publish on Docker: get the latest release by running &quot;$ docker run -it azuresdk/azure-cli-python&quot;.</p>\n\n<p>If you have any feedback, please type &quot;az feedback&quot; into the CLI and let us know!</p>\n\n<blockquote>\n<p>Attending the Microsoft Ignite conference (September 26-30, 2016, Atlanta, GA)? Come visit us at the <strong>Azure Tools</strong> booth for a demo or attend our session titled:&nbsp; <a href=\"https://myignite.microsoft.com/sessions/2673\">Build cloud-ready apps that rock with open and flexible tools for Azure</a>.</p>\n</blockquote>\n\n<h2>Frequently Asked Questions</h2>\n\n<h4>What does this mean to existing users of the XPlat CLI?</h4>\n\n<p>The XPlat CLI will continue to work and scripts will continue to function.&nbsp;Both of them support a different top level command (&lsquo;azure&rsquo; vs &lsquo;az&rsquo;), and you can use them together for specific scenarios. Credentials and some defaults (such as default subscription) are shared between CLIs allowing you to try out Azure CLI 2.0 Preview while leaving your existing CLI installation untouched.&nbsp;We are continuing to support and add new features the XPlat CLI.</p>\n\n<h4>I have scripts that call the &ldquo;azure&rdquo; command &ndash; will those work with the new tool?</h4>\n\n<p>Existing scripts built against the Azure XPlat CLI (&quot;azure&quot; command) will not work with the Azure CLI 2.0 Preview. While most commands have similar naming conventions, the structure of the input and output have changed. For most customers, this means changing scripts to &#39;workarounds&#39; required by the Azure XPlat CLI, or relying on the co-existence of both tools.</p>\n\n<h4>Are you going to discontinue the Azure XPlat CLI? When will you take Azure CLI 2.0 out of preview?</h4>\n\n<p>The current XPlat CLI will continue to be available and supported, as it is needed for all ASM/Classic based services. The new Azure CLI 2.0 will stay in preview for now as we collect early user feedback to drive improvements up until the final release (date TBD).</p>\n\n<h4>Is .NET Core and PowerShell support changing on this release?</h4>\n\n<p>Support for .NET Core and PowerShell is not changing with this release. They will continue to be available and fully supported. We feel that PowerShell and POSIX-based CLIs serve different sets of users and provides the best choice for automation/scripting scenarios from the command-line. Both of these options are available on multiple platforms.&nbsp; Both are open source now and we are investing in both of them.</p>\n"
}