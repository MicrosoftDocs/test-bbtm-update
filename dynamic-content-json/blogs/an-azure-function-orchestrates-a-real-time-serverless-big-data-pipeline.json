{
    "Slug": "an-azure-function-orchestrates-a-real-time-serverless-big-data-pipeline",
    "Title": "An Azure Function orchestrates a real-time, serverless, big data pipeline",
    "Summary": "Although itâ€™s not a typical use case for Azure Functions, a single Azure function is all it took to fully implement an end-to-end, real-time, mission-critical data pipeline for a fraud detection scenario. And it was done with a serverless architecture.",
    "Content": "<p>Although it&rsquo;s not a typical use case for Azure Functions, a single Azure function is all it took to fully implement an end-to-end, real-time, mission-critical data pipeline for a fraud detection scenario. And it was done with a <a href=\"https://azure.microsoft.com/en-us/overview/serverless-computing/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">serverless</a> architecture. Two blogs recently described this use case, &ldquo;<a href=\"https://azure.microsoft.com/en-us/blog/considering-azure-functions-for-a-serverless-data-streaming-scenario/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Considering Azure Functions for a serverless data streaming scenario</a>,&rdquo; and &ldquo;<a href=\"https://azure.microsoft.com/en-us/blog/a-fast-serverless-big-data-pipeline-powered-by-a-single-azure-function/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">A fast, serverless, big data pipeline powered by a single Azure Function</a>.&rdquo;</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/48aa14ca-1721-4445-92dd-c5fb045f8c60.png\"><img alt=\"Graphic representing Azure Functions\" border=\"0\" height=\"283\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31374951-4e7d-4105-a166-eb31060cb85d.png\" style=\"margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;\" title=\"Graphic representing Azure Functions\" width=\"343\"></a></p>\n\n<h2>Pipeline requirements</h2>\n\n<p>A large bank wanted to build a solution to detect fraudulent transactions. The solution was built on an architectural pattern common for big data analytic pipelines, with massive volumes of real-time data ingested into a cloud service where a series of data transformation activities provided input for a machine learning model to deliver predictions. Latency and response times are critical in a fraud detection solution, so the pipeline had to be very fast and scalable. End-to-end evaluation of each transaction had to complete and provide a fraud assessment in less than two seconds.</p>\n\n<p>Requirements for the pipeline included the following:</p>\n\n<ul>\n <li>Ability to scale and efficiently process bursts of event activity totaling 8+ million transactions daily.</li>\n <li>Daily parsing and processing of 4 million complex JSON files.</li>\n <li>Events and transactions had to be processed in sequential order with assurances that duplicates would not be processed.</li>\n <li>Reference data and business rules could change dynamically and the pipeline needed to accommodate these updates.</li>\n <li>A deployed architecture that could easily integrate with a CI/CD and DevOps process.</li>\n</ul>\n\n<h2>Pipeline solution</h2>\n\n<p>The pipeline starts and ends with an Azure Function. A single function orchestrates and manages the entire pipeline of activities, including the following:</p>\n\n<ol>\n <li>Consuming, validating, and parsing massive numbers of JSON files.</li>\n <li>Invoking a SQL stored procedure to extract data elements from JSON files, with data used to build real-time behavioral profiles for bank accounts and customers, and to generate an analytics <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/team-data-science-process/create-features/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">feature</a> set.</li>\n <li>Invoking a machine learning model to evaluate and score each individual transaction.</li>\n <li>Posting the fraud score back to an on-premises API for integration to a case management solution (a separate solution that lets users examine and unblock transactions).</li>\n</ol>\n\n<h2>Recommended next steps</h2>\n\n<p>If you are designing a real-time, serverless data pipeline and seek the flexibility of coding your own methods for integration with other services, or to deploy through continuous integration, consider using Azure Functions to orchestrate and manage the pipeline.</p>\n\n<p>Read the &ldquo;<a href=\"https://download.microsoft.com/download/0/1/5/0150425C-14C7-41F4-97EA-3DE57B678C51/IndSG_FraudDetection.pdf\" target=\"_blank\">Mobile Bank Fraud Solution Guide</a>&rdquo; to learn details about the architecture and implementation. Read more about the pipeline technology decision and implementation in these two blogs, &ldquo;<a href=\"https://azure.microsoft.com/en-us/blog/considering-azure-functions-for-a-serverless-data-streaming-scenario/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">Considering Azure Functions for a serverless data streaming scenario</a>,&rdquo; and &ldquo;<a href=\"https://azure.microsoft.com/en-us/blog/a-fast-serverless-big-data-pipeline-powered-by-a-single-azure-function/?WT.mc_id=ms-docs-kbaroni\" target=\"_blank\">A fast, serverless, big data pipeline powered by a single Azure Function</a>.&rdquo; We hope you find this helpful and we welcome your feedback.</p>\n"
}