{
    "Slug": "announcing-public-availability-of-service-bus-for-windows-server-service-bus-1-0",
    "Title": "Announcing Public Availability of Service Bus for Windows Server (Service Bus 1.0)",
    "Summary": "Editor's Note: This post&nbsp;comes from&nbsp;Todd Holmquist-Sutherland,&nbsp;Principal Group Program Manager at Microsoft.  Today I&rsquo;m excited to share the news that we&rsquo;ve reached theâ€¦",
    "Content": "<p><strong>Editor's Note:</strong> This post&nbsp;comes from&nbsp;<strong>Todd Holmquist-Sutherland</strong>,&nbsp;Principal Group Program Manager at Microsoft.</p>  <p>Today I&rsquo;m excited to share the news that we&rsquo;ve reached the release milestone for Service Bus 1.0 and it is now available for&nbsp;<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=35374\" target=\"_blank\">download</a>.</p>  <p>There were two primary goals with this product release that we believe we&rsquo;ve accomplished. The first was to deliver an enterprise class messaging service to our customers to support the creation of the modern applications that power their businesses. The second was to make sure the service delivered parity with the Windows Azure based messaging service already in the market&nbsp; (<a href=\"https://msdn.microsoft.com/en-us/library/ee732537.aspx\" target=\"_blank\">Windows Azure Service Bus</a>).</p>  <h4>Enterprise Functionality</h4>  <p>Service Bus 1.0 was designed to allow for enterprise messaging capabilities in a Windows Server-based environment.&nbsp; It enables you to build, test, and run loosely-coupled, message-driven applications in self-managed environments and on developer computers.&nbsp; The two primary features are <b>Service Bus Queues</b> and <b>Service Bus Topics and Subscriptions</b>.</p>  <ul>  <li><b>Service Bus Queues</b> offer reliable message storage and retrieval with a choice of protocols and APIs. Use Service Bus queue in your application to provide <i>load leveling</i> by having the message receiver processing messages at its own pace or to provide <i>load balancing</i> by having multiple, competing receivers accepting messages from the same queue.&nbsp;</li>  </ul>  <p style=\"padding-left: 30px;\">For more information on Service Bus queues refer to <a href=\"https://azure.microsoft.com/en-us/develop/net/how-to-guides/service-bus-queues/\" target=\"_blank\">How to Use Service Bus Queues</a>.</p>  <ul>  <li><b>Service Bus Topics and Subscriptions</b> offer (in addition to all of the queue&rsquo;s) rich publish-subscribe capabilities allowing multiple, concurrent subscribers to independently retrieve filtered or unfiltered views of the published message stream.&nbsp;</li>  </ul>  <p style=\"padding-left: 30px;\">For more information on Service Bus topics and subscriptions refer to <a href=\"https://azure.microsoft.com/en-us/develop/net/how-to-guides/service-bus-topics/\" target=\"_blank\">How to Use Service Bus Topics</a></p>  <p>Other advanced messaging features include detection of duplicate messages, scheduled message delivery, performance optimization (using asynchronous calls, batching and prefetching of messages) and more.&nbsp; We feel this product will deliver a high quality alternative to many of the expensive solutions currently on the market.</p>  <h4>Development Symmetry</h4>  <p>The second design point for Service Bus 1.0 was to ensure symmetry between this product and <a href=\"https://msdn.microsoft.com/en-us/library/ee732537.aspx\" target=\"_blank\">Windows Azure Service Bus</a> thereby allowing for a single set of code to be leveraged across both deployment environments.&nbsp; The programming model and APIs exposed for developing applications are consistent with those of the public cloud service, making it easy to develop applications for either and switch between the two.&nbsp; We feel this will enable a better development experience.&nbsp; For example, developers can now install the service locally to allow for debugging of applications with much more control before publishing to a public cloud.&nbsp; This symmetry will also allow for flexibility in your transition to public cloud infrastructure by not requiring a rewrite of your messaging service when you&rsquo;re ready for that move.&nbsp;</p>  <h4>Pricing and Licensing&nbsp;</h4>  <p>Service Bus 1.0 is available today from the <a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=35374\" target=\"_blank\">download center&nbsp;</a>and is a <b>free</b> piece of technology for use with a properly licensed version of Windows Server.</p>  <p>  <p>You can quickly get started with install and writing your first application by following step-by-step instruction <a href=\"https://msdn.microsoft.com/en-us/library/jj193021(v=azure.10)\" target=\"_blank\">here</a>. For any questions and/or feedback, please reach out to us on <a href=\"https://social.msdn.microsoft.com/Forums/en-US/servbus/threads\" target=\"_blank\">Service Bus 1.0 MSDN Forum.</a></p>  <p>We are excited to bring Windows Azure Service Bus capabilities to Windows Server and look forward to seeing the solutions built on it. Learn more about&nbsp;<a href=\"https://msdn.microsoft.com/en-us/library/jj193022(v=azure.10).aspx\" target=\"_blank\">Service Bus 1.0 for Windows Server</a>.</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp; - Todd Holmquist-Sutherland, Principal Group Program Manager.</p>"
}