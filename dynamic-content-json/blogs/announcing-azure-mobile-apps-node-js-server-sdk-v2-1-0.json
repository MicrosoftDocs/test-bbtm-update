{
    "Slug": "announcing-azure-mobile-apps-node-js-server-sdk-v2-1-0",
    "Title": "Announcing Azure Mobile Apps Node.js Server SDK v2.1.0",
    "Summary": "The v2.1.0 release of the Server SDK adds support for SQLite on the server. This provides a new data store that can be used for a number of important scenarios.",
    "Content": "<p>When we released the v2.0.0 GA release of the Azure Mobile Apps Node.js Server SDK, we had some unfinished business to deal with.&nbsp;Most notable among the customer asks was the ability to run a local development edition of the server without needing a SQL Server. The v2.1.0 release of the Server SDK adds support for SQLite on the server. This provides a new data store that can be used for a number of important scenarios:</p>\n\n<h2>Local development</h2>\n\n<p>The SQLite data provider brings a greatly simplified local development experience to all platforms, including OS X and Linux. SQLite runs on all node.js versions and platforms, requires no external database and can run entirely in memory.</p>\n\n<p>The data provider works without any configuration and is configured to be the default provider, enabling zero configuration local development that just works and can be switched over to using a SQL Azure instance without zero code changes between the local development environment and Azure production environment.</p>\n\n<h2>Unit/integration test suite</h2>\n\n<p>One of the main items is the ability to test your service locally using unit and integration tests based on Mocha, Jasmine or another test framework. The main problem here is that tests can leave your database in a bad state, causing failures that are due to the SQL state rather than your database. Using the SQLite database enables the tests to be run with an in-memory provider that is refreshed with a known good state prior to every single test run. This allows you to automate the testing through a variety of continuous integration solutions.</p>\n\n<h2>Support for AAD groups</h2>\n\n<p>Azure Mobile Apps supports authentication via Facebook, Twitter, Google+, Microsoft and Azure Active Directory. This latter mechanism provides support for enterprise mobile applications. We now support a full decoding of the AAD claims, which includes AAD Group membership. If you have configured AAD to provide groups as a claim, these will be available via the <code>getIdentity()</code>call.</p>\n\n<h2>Continual improvements to documentation</h2>\n\n<p>In addition to the above, we&#39;ve made some more improvements to the <a href=\"https://github.com/Azure/azure-mobile-apps-node/tree/master/samples\" target=\"_blank\">samples</a> and the <a href=\"https://azure.github.io/azure-mobile-apps-node/\" target=\"_blank\">API reference</a>. We&#39;re committed to continually improving our samples and documentation, so if you want to see something in this area, let us know.</p>\n\n<p>You can find the complete list of changes <a href=\"https://github.com/Azure/azure-mobile-apps-node/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A2.1.0+\" target=\"_blank\">here</a>.&nbsp; All of our SDKs are open source and we welcome contributions.</p>\n\n<h2>Contacting the team</h2>\n\n<p>The Azure Mobile Apps team can be contacted through one of the following mechanisms:</p>\n\n<ul>\n\t<li><a href=\"https://stackoverflow.com/questions/tagged/azure-mobile-app\" target=\"_blank\">Stack Overflow</a></li>\n\t<li><a href=\"https://social.msdn.microsoft.com/Forums/en-US/home?forum=azuremobile&amp;filter=alltypes&amp;sort=lastpostdesc\" target=\"_blank\">Azure Forums</a></li>\n\t<li><a href=\"https://feedback.azure.com/forums/216254-mobile-apps\" target=\"_blank\">Azure Feedback</a></li>\n\t<li><a href=\"https://github.com/azure?utf8=%E2%9C%93&amp;query=azure-mobile-apps\" target=\"_blank\">GitHub Issues</a></li>\n\t<li><a href=\"https://twitter.com/AzureMobile\" target=\"_blank\">Twitter</a></li>\n\t<li><a href=\"https://gitter.im/Azure/azure-mobile-apps-node\" target=\"_blank\">Gitter</a></li>\n</ul>\n"
}