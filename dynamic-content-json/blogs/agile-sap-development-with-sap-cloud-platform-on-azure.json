{
    "Slug": "agile-sap-development-with-sap-cloud-platform-on-azure",
    "Title": "Agile SAP development with SAP Cloud Platform on Azure",
    "Summary": "SAP Cloud Platform (SCP), SAP's platform-as-a-service offering, is moving from our preview to general availability on Azure. We're excited to announce  that the Cloud Foundry based SAP Cloud Platform (SCP) is now running on Azure in the Europe West region today!",
    "Content": "<p><em>This blog post was co-authored by Mario Szpuszta, Principal Software Engineer, Azure CAT</em></p>\n\n<p>Recently we announced that SAP Cloud Platform is transitioning from Beta to general availability on Azure. SAP Cloud Platform (SAP CP) is SAP's multi-cloud platform-as-a-service offering and is now available for production use in Azure West Europe.</p>\n\n<p>With SAP CP on Azure, we extend the choices available on Azure to meet your SAP development needs.&nbsp; SAP CP offers a fully managed platform-as-a-service, operated by SAP, and is the first multi-tenant and fully managed Cloud Foundry PaaS on Azure. With SAP CP running on Azure, customers can</p>\n\n<ul>\n <li>Leverage a broad range of certified <a href=\"https://azure.com/sap\" target=\"_blank\">SAP HANA offerings on Azure</a>. </li>\n <li>Integrate with Azure-Native Services such as EventHubs, AzureSQL Database, Azure CosmosDB, Azure ServiceBus etc., using <a href=\"https://osba.sh/\" target=\"_blank\">Meta Azure Service Broker</a>.</li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/active-directory/active-directory-saas-sap-hana-cloud-platform-tutorial\" target=\"_blank\">Integrate with Azure Active Directory</a> to enable Single-Sign-On for SAP Cloud Platform</li>\n</ul>\n\n<h2>SAP Cloud Platform on Azure – Getting started</h2>\n\n<p>To get started with SAP CP on Azure, login to your <a href=\"https://cloudplatform.sap.com/index.html\" target=\"_blank\">SAP CP account</a>. Pick Cloud Foundry and select Europe (Netherlands) Azure region. This will create an Organization and Space within the SAP CP Cloud Foundry environment.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5518ab3f-1e92-44f8-b15f-d387386d2dee.png\"><img width=\"638\" height=\"584\" title=\"image_1_regions\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" alt=\"image_1_regions\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ea1f825a-5a9a-44c6-b218-a37ba965b1d4.png\" border=\"0\"></a></p>\n\n<h2>Deploying applications and services</h2>\n\n<p>Developers can use either the SAP CP cockpit or Cloud Foundry CLI to deploy and manage their applications and services.</p>\n\n<p>SAP CP cockpit provides a convenient way to browse and monitor deployed applications. Developers can use cockpit to browse through the catalog of infrastructure services enabled by SAP under the Service Marketplace. These services leverage Azure Virtual Machines for infrastructure, even configuring use of Azure Availability Zones for high availability.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/bf5f61f9-c4cb-4dec-b818-2c818148bf24.png\"><img width=\"1875\" height=\"1215\" title=\"image_2_marketplace\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" alt=\"image_2_marketplace\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1cb9517b-5d6a-4293-b46c-bdd69de11f46.png\" border=\"0\"></a></p>\n\n<h2>Using the Cloud Foundry CLI</h2>\n\n<p>Since SAP CP is a Cloud Foundry based PaaS enabled for SAP infrastructure, you can manage your SAP CP environments just like any other Cloud Foundry environment. For SAP-specific services such as HANA, SAP provides plug-ins such as the <a href=\"https://tools.hana.ondemand.com/#cloud\" target=\"_blank\">HANA MTA plug-in</a> for the Cloud Foundry CLI to make it easier to work with SAP-specific services.</p>\n\n<p>SAP CP uses different API endpoints for each region. For accessing the SAP CP landscape deployed in Azure West Europe through the CF CLI, you'd use the following API endpoint:</p>\n\n<pre>cf api <a href=\"https://api.cf.eu20.hana.ondemand.com\">https://api.cf.eu20.hana.ondemand.com</a>\ncf login</pre>\n\n<p>You can use all Cloud Foundry CLI/APIs to push apps, explore marketplace, and more.</p>\n\n<h2>Connecting to Azure Platform Services using the Meta Azure Service Broker</h2>\n\n<p><a href=\"https://github.com/Azure/meta-azure-service-broker\" target=\"_blank\">Meta Azure Service Broker (MASB)</a> lets you provision Azure Platform Services directly from Cloud Foundry. MASB GitHub page provides steps to <a href=\"https://github.com/Azure/meta-azure-service-broker/blob/master/docs/how-admin-deploy-the-broker.md\" target=\"_blank\">install the service broker on Cloud Foundry</a>. You can also use <a href=\"https://osba.sh/\" target=\"_blank\">Open Service Broker</a>, which is currently in preview but will eventually replace MASB for your productive environments.</p>\n\n<p>Once you've installed MASB, Azure Services will become available in Service Marketplace. You can use Cloud Foundry CLI or SAP CP cockpit to browse the services available.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fa923e1f-7f57-40b1-aa21-65c1c4e35bd4.png\"><img width=\"1500\" height=\"435\" title=\"image_3_cfmarketplacev3\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" alt=\"image_3_cfmarketplacev3\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8cbd7ace-4c8f-4062-bc5e-592f2d321f5d.png\" border=\"0\"></a></p>\n\n<p>The above shows all Azure services enabled in addition to the services enabled by SAP. You can now start using the services exposed by MASB for Azure. Connecting to Azure Platform services in the Marketplace follows standard Cloud Foundry patterns with Service Brokers. You create a service, and then bind the service to one or many applications using the Cloud Foundry service broker APIs and CLI.</p>\n\n<p>You can find the parameters to be specified for each service on the <a href=\"https://github.com/Azure/meta-azure-service-broker\" target=\"_blank\">MASB GitHub</a>. Let's create an Azure CosmosDB as an example. We’ll use the following configuration:</p>\n\n<pre>{\n   \"resourceGroup\": \"Tests.SAPCPMetaServiceBroker\",\n   \"cosmosDbAccountName\": \"samplecosmosaccount\",\n   \"cosmosDbName\": \"samplecosmosdatabase\",\n   \"location\": \"westeurope\",\n   \"kind\": \"DocumentDB\"\n}</pre>\n\n<p>We’ll use CloudFoundry CLI commands to create a new service and make Cloud Foundry aware of it:</p>\n\n<pre>&gt;cf create-service azure-cosmosdb-xxxxxxx-xxxx-xxxx-xxxx-45337ac75764 standard samplecosmosdb -c C:\\Temp\\params.json\n\nCreating service instance samplecosmosdb in org xxxxxxxtrial_trial / space dev as xxx@live.com...\nOK\n\nCreate in progress. Use 'cf services' or 'cf service samplecosmosdb' to check operation status.\n\nAttention: The plan `standard` of service `azure-cosmosdb- xxxxxxx-xxxx-xxxx-xxxx-45337ac75764` is not free.  The instance `samplecosmosdb` will incur a cost.  Contact your administrator if you think this is in error.\n\n&gt; cf service samplecosmosdb\n\nShowing info of service samplecosmosdb in org xxxxxxxtrial_trial / space dev as  xxx@live.com...\n\nname:            samplecosmosdb\nservice:         azure-cosmosdb-xxxxxxx-xxxx-xxxx-xxxx-45337ac75764\nbound apps:\ntags:\nplan:            standard\ndescription:     Azure CosmosDb Service (dev)\ndocumentation:\ndashboard:\n\nShowing status of last operation from service samplecosmosdb...\n\nstatus:    create succeeded\nmessage:   Created the cosmosDb\nstarted:   2018-06-20T14:39:23Z\nupdated:   2018-06-20T14:44:33Z</pre>\n\n<p>You can also see the CosmosDB instance show up in the Service Instances tab in cockpit:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b03c4a77-727d-4476-b0b8-78f4e655ad72.png\"><img width=\"1746\" height=\"456\" title=\"Image_4_CosmosDBSucceed\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" alt=\"Image_4_CosmosDBSucceed\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c64f9146-7d74-43ef-8c5b-18f5f8b43cdf.png\" border=\"0\"></a></p>\n\n<p>Finally, by using the cf bind-service command, you can bind the service to any application you've deployed. Configuration parameters will then be exposed through environment variables as per the documentation of the respective service in the Meta Azure Service Broker GitHub. All the above steps can be carried out using SAP Cloud Platform Cockpit, as well.</p>\n\n<h2>What’s next</h2>\n\n<p>We expect more Azure regions to become available soon for SAP development using SAP Cloud Platform.&nbsp; As more and more service light up on <a href=\"https://github.com/Azure/open-service-broker-azure\" target=\"_blank\">Open Service Broker</a> for Azure, it will graduate and eventually replace Meta Azure Service Broker. We expect more regions, along with ability to connect to more Azure Services would effectively round out your SAP Cloud development requirements.</p>"
}