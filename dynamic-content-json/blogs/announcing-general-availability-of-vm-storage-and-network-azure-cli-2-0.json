{
    "Slug": "announcing-general-availability-of-vm-storage-and-network-azure-cli-2-0",
    "Title": "Azure Command Line 2.0 now generally available",
    "Summary": "Today, we’re announcing the general availability of the vm, acs, storage and network commands in Azure CLI 2.0. These commands provide a rich interface for a large array of use cases, from disk and extension management to container cluster creation. See below for an example of the features included with the vm command.",
    "Content": "<p>Back in September, we announced <a href=\"https://azure.microsoft.com/en-us/blog/announcing-azure-cli-2-preview/\">Azure CLI 2.0 Preview</a>. Today, we&rsquo;re announcing the general availability of the <a href=\"https://docs.microsoft.com/en-us/cli/azure/vm\">vm</a>, <a href=\"https://docs.microsoft.com/en-us/cli/azure/acs\">acs</a>, <a href=\"https://docs.microsoft.com/en-us/cli/azure/storage\">storage</a> and <a href=\"https://docs.microsoft.com/en-us/cli/azure/network\">network</a> commands in Azure CLI 2.0. These commands provide a rich interface for a large array of use cases, from disk and extension management to&nbsp; container cluster creation.</p>\n\n<p>Today&rsquo;s announcement means that customers can now use these commands in production, with full support by Microsoft both through our Azure support channels or GitHub. We don&rsquo;t expect breaking changes for these commands in new releases of Azure CLI 2.0.</p>\n\n<p>This new version of Azure CLI should feel much more native to developers who are familiar with command line experiences in the bash enviornment for Linux and macOS with simple commands that have smart defaults for most common operations and that support tab completion and pipe-able outputs for interacting with other text-parsing tools like grep, cut, jq and the popular JMESpath query syntax​. It&rsquo;s <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-az-cli2\"><u>easy to install</u></a> on the platform of your choice and learn.</p>\n\n<p>During the preview period, we&rsquo;ve received valuable feedback from early adopters and have added new features based on that input. The number of Azure services supported in Azure CLI 2.0 has grown and we now have command modules for sql, documentdb, redis, and many other services on Azure. We also have new features to make working with Azure CLI 2.0 more productive. For example, we&rsquo;ve added the &quot;--wait&quot; and &quot;--no-wait&quot; capabilities that enable users to respond to external conditions or continue the script without waiting for a response.</p>\n\n<p>We&rsquo;re also very excited about some new features in Azure CLI 2.0, particularly the combination of Bash and CLI commands, and support for new platform features like Azure Managed Disks.</p>\n\n<p>Here&rsquo;s how to get started using Azure CLI 2.0.</p>\n\n<h2>Installing the Azure CLI</h2>\n\n<p>The CLI runs on Mac, Linux, and of course, Windows. Get started now by <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-az-cli2\">installing the CLI</a> on whatever platform you use.&nbsp; Also, review our <a href=\"https://docs.microsoft.com/en-us/cli/azure/overview\">documentation and samples</a> for full details on getting started with the CLI, and how to access to services provided via Azure using the CLI in scripts.</p>\n\n<p>Here&rsquo;s an example of the features included with the &quot;vm command&quot;:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ed323466-71ca-464a-bc25-b64e8e00b496.png\"><img alt=\"vm command example (2)\" border=\"0\" height=\"768\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c056925f-4fef-4872-a6da-4715ef4982ba.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"vm command example (2)\" width=\"902\"></a></p>\n\n<p>&nbsp;</p>\n\n<h2>Working with the Azure CLI</h2>\n\n<p>Accessing Azure and starting one or more VMs is easy. Here are two lines of code that will create a <a href=\"https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-portal\">resource group</a> (a way to group and Manage Azure resources) and a Linux VM using <a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps/Canonical.UbuntuServer?tab=PlansAndPrice\">Azure&rsquo;s latest Ubuntu VM Image</a> in the westus2 region of Azure.</p>\n\n<pre class=\"prettyprint\">\naz group create -n MyResourceGroup -l westus2\naz vm create -g MyResourceGroup -n MyLinuxVM --image ubuntults \n</pre>\n\n<p>Using the public IP address for the VM (which you get in the output of the vm create command or can look up separately using &quot;az vm list-ip-addresses&quot; command), connect directly to your VM from the command line:</p>\n\n<pre class=\"prettyprint\">\nssh &lt;public ip address&gt; </pre>\n\n<p>For Windows VMs on Azure, you can connect using remote desktop (&quot;mstsc &lt;public ip address&gt;&quot; from Windows desktops).</p>\n\n<p>The &quot;create vm&quot; command is a long running operation, and it may take some time for the VM to be created, deployed, and be available for use on Azure. In most automation scripting cases, waiting for this command to complete before running the next command may be fine, as the result of this command may be used in next command. However, in other cases, you may want to continue using other commands while a previous one is still running and waiting for the results from the server. Azure CLI 2.0 now supports a new &quot;--no-wait&quot; option for such scenarios.</p>\n\n<pre class=\"prettyprint\">\naz vm create -n MyLinuxVM2 -g MyResourceGroup --image UbuntuLTS --no-wait</pre>\n\n<p>As with Resource Groups and a Virtual Machines, you can use the Azure CLI 2.0 to create other resource types in Azure using the&nbsp;&quot;az &lt;resource type name&gt; create&quot; naming pattern.</p>\n\n<p>For example, you can create managed resources on Azure like WebApps within Azure AppServices:</p>\n\n<pre class=\"prettyprint\">\n# Create an Azure AppService that we can use to host multiple web apps \naz appservice plan create -n MyAppServicePlan -g MyResourceGroup\n\n# Create two web apps within the appservice (note: name param must be a unique DNS entry)\naz appservice web create -n MyWebApp43432 -g MyResourceGroup --plan MyAppServicePlan\naz appservice web create -n MyWEbApp43433 -g MyResourceGroup --plan MyAppServicePlan\n</pre>\n\n<p>Read the <a href=\"https://docs.microsoft.com/en-us/cli/azure/\">CLI 2.0 reference docs</a> to learn more about the create command options for various Azure resource types. The Azure CLI 2.0 lets you list your Azure resources and provides different output formats.</p>\n\n<pre class=\"prettyprint\">\n<strong>--output Description</strong>\njson json string. json is the default. Best for integrating with query tools etc\njsonc colorized json string.\ntable table with column headings. Only shows a curated list of common properties for the selected resource type in human readable form.\ntsv tab-separated values with no headers. optimized for piping to other tex-processing commands and tools like grep, awk, etc.\n</pre>\n\n<p>You can use the &quot;--query&quot; option with the list command to find specific resources, and to customize the properties that you want to see in the output. Here are a few examples:</p>\n\n<pre class=\"prettyprint\">\n# list all VMs in a given Resource Group\naz vm list -g MyResourceGroup --output table\n\n# list all VMs in a Resource Group whose name contains the string &lsquo;My&rsquo;\naz vm list --query &ldquo;[?contains(resourceGroup,&rsquo;My&rsquo;)]&rdquo; --output tsv\n\n# same as above but only show the &#39;VM name&#39; and &#39;osType&#39; properties, instead of all default properties for selected VMs\naz vm list --query &ldquo;[?contains(resourceGroup,&rsquo;My&rsquo;)].{name:name, osType:storageProfile.osDisk.osType}&rdquo; --output table\n</pre>\n\n<p>Azure CLI 2.0 supports management operations against SQL Server on Azure. You can use it to create servers, databases, data warehouses, and other data sources; and to show usage, manage administrative logins, and run other management operations.</p>\n\n<pre class=\"prettyprint\">\n# Create a new SQL Server on Azure\naz sql server create -n MySqlServer -g MyResourceGroup --administrator-login &lt;admin login&gt; --administrator-login-password &lt;admin password&gt; -l westus2\n\n# Create a new SQL Server database\naz sql db create -n MySqlDB -g MyResourceGroup --server-name MySqlServer -l westus2\n\n# list available SQL databases on Server within a Resource Group\naz sql db list -g MyResourceGroup --server-name MySqlServer\n</pre>\n\n<h2>Scripting with the new Azure CLI 2.0 features</h2>\n\n<p>The new ability to combine Bash and Azure CLI 2.0 commands in the same script can be a big time saver, especially if you&rsquo;re already familiar with Linux command-line tools like grep, cut, jq and <a href=\"https://docs.microsoft.com/en-us/cli/azure/query-az-cli2\">JMESpath queries</a>.</p>\n\n<p>Let&rsquo;s start with a simple example that stops a VM in a resource group using a VM&rsquo;s resource ID (or multiple IDs by spaces):</p>\n\n<pre class=\"prettyprint\">\naz vm stop &ndash;ids &lsquo;&lt;one or more ids&gt;&rsquo;</pre>\n\n<p>You can also stop a VM in a resource group using the VM&rsquo;s name. Here&rsquo;s how to stop the VM we created above:</p>\n\n<pre class=\"prettyprint\">\naz vm stop -g resourceGroup -n simpleVM</pre>\n\n<p>For a more complicated use case, let&rsquo;s imagine we have a large number of VMs in a resource group, running Windows and Linux.&nbsp; To stop all running Linux VMs in that resource group, we can use a JMESpath query, like this:</p>\n\n<pre class=\"prettyprint\">\nos=&quot;Linux&quot;\nrg=&quot;resourceGroup&quot;\nps=&quot;VM running&quot;\nrvq=&quot;[].{resourceGroup: resourceGroup, osType: storageProfile.osDisk.osType, powerState: powerState, id:id}| [?osType==&#39;$os&#39;]|[?resourceGroup==&#39;$rg&#39;]| [?powerState==&#39;$ps&#39;]|[].id&quot;\naz vm stop --ids $(az vm list --show-details --query &quot;$rvq&quot; --output tsv)\n</pre>\n\n<p>This script issues an az vm stop command, but only for VMs that are returned in the JMESpath query results (as defined in the rvq variable). The osType, resourceGroup and powerState parameters are provided values. The resourceGroup parameter is compared to a VM&rsquo;s resourceGroup property, and the osType parameter is compared to a VM&rsquo;s storageProfile.osDisk.osType property, and all matching results are returned (in <a href=\"https://en.wikipedia.org/wiki/Tab-separated_values\">tsv format</a>) for use by the &quot;az vm stop&quot; command.</p>\n\n<h2>Azure Container Services in the CLI</h2>\n\n<p>Azure Container Service (ACS) simplifies the creation, configuration, and management of a cluster of virtual machines that are preconfigured to run container applications. You can use Docker images with DC/OS (powered by Apache Mesos), Docker Swarm or Kubernetes for orchestration.</p>\n\n<p>The Azure CLI supports the creation and scaling of ACS clusters via the az acs command. You can discover full documentation for <a href=\"https://docs.microsoft.com/en-us/cli/azure/acs\">Azure Container Services</a>, as well as a tutorial for <a href=\"https://docs.microsoft.com/en-us/azure/container-service/container-service-create-acs-cluster-cli\">deploying an ACS DC/OS cluster with Azure CLI commands</a>.</p>\n\n<h2>Scale with Azure Managed Disks using the CLI</h2>\n\n<p>Microsoft recently <a href=\"https://azure.microsoft.com/en-us/blog/announcing-general-availability-of-managed-disks-and-larger-scale-sets/\">announced</a> the general availability of Azure Managed Disks to simplify the management and scaling of Virtual Machines. You can create a Virtual Machine with an implicit Managed Disk for a specific disk image, and also create managed disks from blob storage or standalone with the az vm disk command. Updates and snapshots are easy as well -- check out what you can do with <a href=\"https://azure.microsoft.com/en-us/blog/azure-cli-managed-disks/\">Managed dDisks from the CLI</a>.</p>\n\n<h2>Start using Azure CLI 2.0 today!</h2>\n\n<p>Whether you are an existing CLI user or starting a new Azure project, it&rsquo;s easy to get started with the CLI at <a href=\"https://aka.ms/CLI\">https://aka.ms/CLI</a> and master the command line with our updated <a href=\"https://docs.microsoft.com/en-us/cli/azure/\">docs and samples</a>. Check out topics like <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-az-cli2\">installing and updating the CLI</a>, working with <a href=\"https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-quick-create-cli?toc=%2fcli%2fazure%2ftoc.json\">Virtual Machines</a>, creating a <a href=\"https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-create-cli-complete?toc=%2fcli%2fazure%2ftoc.json\">complete Linux environment</a> including VMs, Scale Sets, Storage, and network, and deploying Azure <a href=\"https://docs.microsoft.com/en-us/azure/app-service-web/app-service-web-get-started-nodejs?toc=%2fcli%2fazure%2ftoc.json\">Web Apps</a> &ndash; and let us know what you think!</p>\n\n<p>Azure CLI 2.0 is open source and on <a href=\"https://github.com/azure/azure-cli\">GitHub</a>.</p>\n\n<p>In the next few months, we&rsquo;ll provide more updates. As ever, we want your ongoing feedback! Customers using the vm, storage and network commands in production can contact Azure Support for any issues, reach out via <a href=\"https://stackoverflow.com/questions/tagged/azure-cli\">StackOverflow using the azure-cli tag</a>, or email us directly at <a href=\"mailto:azfeedback@microsoft.com\">azfeedback@microsoft.com</a>.</p>\n"
}