{
    "Slug": "announcing-azure-service-fabric-5-5-and-sdk-2-5",
    "Title": "Announcing Azure Service Fabric 5.5 and SDK 2.5",
    "Summary": "Customers around the world are delivering their mission critical business applications as always-on, scalable, and distributed services built using Azure Service Fabric. Last week we rolled out Azureâ€¦",
    "Content": "<p>Customers around the world are delivering their mission critical business applications as always-on, scalable, and distributed services built using <a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\">Azure Service Fabric</a>. Last week we rolled out Azure Service Fabric 5.5 to Azure clusters in 26 regions across the world. Today, we&rsquo;re excited to announce the release of version 2.5 of the Azure Service Fabric SDK and the corresponding 5.5 release of the Azure Service Fabric runtime and standalone Windows Server installer.</p>\n\n<p>If you&#39;re using Visual Studio 2017, the Service Fabric tools are built in, so you&#39;ll only need to <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx?command=getinstallerredirect&amp;appid=MicrosoftAzure-ServiceFabric-CoreSDK\">install the Microsoft Azure Service Fabric SDK</a>. If you&#39;re using Visual Studio 2015, <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx?command=getinstallerredirect&amp;appid=MicrosoftAzure-ServiceFabric-VS2015\">install the Microsoft Azure Service Fabric SDK and Tools</a>.*</p>\n\n<p>Get the <a href=\"https://go.microsoft.com/fwlink/?LinkId=730690\">new standalone package for Windows Server</a>.</p>\n\n<p>This release has a number of great new features along with the usual bug fixes and optimizations. Here are a few highlights of this release, in no particular order:</p>\n\n<h2>Support for compressed application packages for faster image store upload</h2>\n\n<p>Previously, application packages were always a directory structure. While this format was simple to edit it could occasionally result in application packages that were quite large. This can be problematic when copying and registering in a Service Fabric cluster, especially on slower connections or across larger distances. In this release we have added support for compressed packages prior to upload to the cluster.&nbsp;</p>\n\n<h2>Improved upgrade behavior to catch additional errors during upgrade and improve deployment safety</h2>\n\n<p>In this release, we&rsquo;ve increased the default health check duration between upgrade domains so that the automated upgrade rollback function has a chance to catch a wider range of errors. This makes upgrades slightly longer, but much safer by default.</p>\n\n<p>We also improved the health evaluation of entities by checking that they have at least one report from their system authority component. This ensures that the health store view is consistent with the state of the system as viewed by the authority components, adding to even greater upgrade safety.</p>\n\n<h2>ASP.NET Core integration</h2>\n\n<p>Integration with ASP.NET Core is now fully supported in both stateless and stateful Reliable Services, available as add-on NuGet packages. These packages allow you to easily bootstrap an ASP.NET Core web application in a stateless or stateful service using either Kestrel or WebListener. The integration also features custom Service Fabric middleware designed to help handle service resolution when connecting to an ASP.NET Core Service Fabric service. Learn more about <a href=\"https://docs.microsoft.com/azure/service-fabric/service-fabric-reliable-services-communication-aspnetcore\">ASP.NET Core in Service Fabric</a>.</p>\n\n<h2>Refresh application debug mode in Visual Studio 2015 (Preview this release)</h2>\n\n<p>In conjunction with ASP.NET Core integration support, we&rsquo;ve added a new application debug mode to the Service Fabric Application project. Refresh Mode allows you to quickly iterate between writing code and debugging and supports edit and refresh for ASP.NET Core services, so you can now develop ASP.NET Core services in Service Fabric the same way you would outside of Service Fabric.<br>\nNote that Refresh Mode is a preview feature in this release. Refresh Mode will also be available in Visual Studio 2017 soon.</p>\n\n<h2>.NET Core support using csproj project system in Visual Studio 2017</h2>\n\n<p>Service Fabric services for .NET Core now supports the new simplified .csproj project system in Visual Studio 2017. Migrating to csproj from existing xproj projects is also supported, but is a one-way migration.</p>\n\n<p>For more details on these features and others, along with bug fixes and known issues, please see the <a href=\"https://servicefabricsdkstorage.blob.core.windows.net/public-release-notes/Microsoft Azure Service Fabric Release Notes - SDK 2.5.216 - Runtime 5.5.216.docx\">detailed release notes</a>.</p>\n\n<p>*<em>Note that there is a known issue causing occasional failures when following WebPI links in Google Chrome. If you run into this, either try the link in another browser or launch the WebPI client directly and search for Service Fabric.</em></p>\n"
}