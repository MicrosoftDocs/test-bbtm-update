{
    "Slug": "announcing-release-of-visual-studio-2013-update-3-and-azure-sdk-2-4",
    "Title": "Announcing release of Visual Studio 2013 Update 3 and Azure SDK 2.4",
    "Summary": "Today, we are excited to announce the release of Visual Studio 2013 Update 3 and Azure SDK 2.4 for .NET. This post describes the new tooling features for Azure development enabled by these releases.…",
    "Content": "Today, we are excited to announce the release of Visual Studio 2013 Update 3 and Azure SDK 2.4 for .NET. This post describes the new tooling features for Azure development enabled by these releases.\n\n<span style=\"text-decoration: underline;\">Visual Studio Update 3</span> [<a href=\"https://go.microsoft.com/fwlink/?LinkId=403040\">download</a>]\n<ul>\n <li><strong>Websites</strong>: Publish WebJobs from Console or Web projects.</li>\n <li><strong>Mobile Services</strong>: Create a Dev/Test environment in the cloud when creating Mobile Services projects. Use the Push Notification Wizard with .NET Mobile Services.</li>\n <li><strong>Notification Hubs</strong>: View and manage device registrations.</li>\n</ul>\n&nbsp;\n\n<span style=\"text-decoration: underline;\">Azure SDK 2.4 for .NET</span> [<a href=\"https://go.microsoft.com/fwlink/p/?linkid=323510&amp;clcid=0x409\">VS 2013 download</a> | <a href=\"https://go.microsoft.com/fwlink/p/?linkid=323511&amp;clcid=0x409\">VS 2012 download</a>]\n\nWith the additional install of the Azure SDK 2.4 for .NET, you can also take advantage of the following features:\n<ul>\n <li><strong>Virtual Machines</strong>: Remote debug 32-bit Virtual Machines. Configure Virtual Machines, including installation &amp; configuration of dynamic extensions (e.g. anti-malware, Puppet, Chef and custom script). Create Virtual Machine snapshots of the disk state.</li>\n <li><strong>Storage</strong>: View Storage activity logs for diagnostics. Provision Read-Access Geo-redundant Storage from Visual Studio.</li>\n <li><strong>Cloud Services</strong>: Emulator Express is the default option for new projects (Full Emulator is deprecated). Configure new networking capabilities in the service model.</li>\n</ul>\n&nbsp;\n\nWe have also launched a number of updates to Azure PowerShell, including <a href=\"https://go.microsoft.com/?linkid=9811175\">today’s 0.8.6 release</a>.  Details on what’s new are available in the <a href=\"https://github.com/Azure/azure-sdk-tools/blob/master/ChangeLog.txt\">changelog</a>.\n<h2>Websites: Publish WebJobs from Console Projects</h2>\nIn January, we added a feature called <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs\">WebJobs</a> that makes it really easy to take background code (programs or scripts) and run it within a Website. Until today, publishing a WebJob required you to either use the portal or Azure PowerShell. With today’s release, you can alternatively publish your WebJobs from right within Visual Studio.\n\nTo get started, open an existing Console project or create new one:\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo.png\" alt=\"foo\" width=\"500\" height=\"345\" border=\"0\" />\n\nImplement your Main method. While not required, you can use the <a href=\"https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs\">Microsoft Azure WebJobs SDK</a>. The SDK, available as a <a href=\"https://www.nuget.org/packages/Microsoft.Azure.Jobs/\">NuGet package</a>, makes it especially easy to integrate Azure Storage and trigger a function in your program when items are added to Queues, Blobs or Tables.\n\nWhen you are ready to publish your project to Azure, select your project, right click and choose the <b>Publish as Azure WebJob</b> command.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo2.png\" alt=\"foo2\" width=\"360\" height=\"177\" border=\"0\" />\n\nYou will then see a screen for configuring the WebJob and choosing how you want to run it: <b>Run Continuously, Run on a Schedule, or Run on Demand</b>.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo3.png\" alt=\"foo3\" width=\"500\" height=\"268\" border=\"0\" />\n\nIf you choose the continuous option, make sure your code is written to run in an endless loop. Once you select <b>OK</b>, you will see the Publish Web dialog where you choose which Website to publish to. You can deploy your WebJob as part of an existing Website, or you can create a new Website.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo4.png\" alt=\"foo4\" width=\"450\" height=\"353\" border=\"0\" />\n\nFinally, open the Azure portal and navigate to the Website that contains your WebJob. Select the <b>WebJobs </b>tab, and you will see helpful information about your WebJob. This includes a link to a dashboard for viewing logs and monitoring status.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo5.png\" alt=\"foo5\" width=\"500\" height=\"273\" border=\"0\" />\n<h2>Websites: Publish WebJobs from Web Projects</h2>\nInstead of publishing your WebJobs one at a time, we also make it easy to publish your WebJobs as part of publishing your Azure Website. This way, it is just one step to publish your Website and all related WebJobs. Right-click your Web Project, and choose <b>Add-&gt;New Azure WebJob Project</b> or <b>Add-&gt;Existing Project as Azure WebJob</b> to associate new or existing Console projects.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"WebJobs\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo6.png\" alt=\"foo6\" width=\"500\" height=\"323\" border=\"0\" />\n\nNow when you select <b>Publish</b> to publish your project to an Azure Website, the associated WebJobs will be deployed as well.\n<h2>Mobile Services: Push Notification Wizard for .NET Mobile Services</h2>\nWith Visual Studio 2013 Update 3, we’ve added support for .NET Mobile Services in the Push Notification Wizard, making it easier for you to add push notifications to your Windows Phone and Windows Store applications. The Wizard will help register your client for push notifications and then provide you with sample backend logic to send push notifications. To invoke the wizard, select your project, right click and choose the <b>Add -&gt; Push Notification</b> command.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image002[7]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0027.png\" alt=\"clip_image002[7]\" width=\"334\" height=\"494\" border=\"0\" />\n<h2>Mobile Services: Provision Mobile Services during Project Creation</h2>\nNow as you create your project, you can also create a Mobile Service to accompany it that can be used as a Dev/Test environment. As you develop your project, you can quickly publish it to the accompanying mobile service to test your code against the live service. To provision a new mobile service simply select the checkbox to <b>Host in the cloud</b> in the New ASP.NET Project dialog.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"FileNewMobile\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/FileNewMobile.png\" alt=\"FileNewMobile\" width=\"610\" height=\"456\" border=\"0\" />\n<h2>Notification Hubs: View and Manage Device Registrations</h2>\nNotifications Hubs already has support for sending test notifications to your devices (Windows Phone, Windows Store, iOS, Android, or Kindle Fire). In Visual Studio Update 3, we’ve added more tooling to enable you to view your device registrations, edit tags, and delete registrations. In addition, we also provide a registration count by platform to provide a quick summary view. To access the notifications hubs tooling, find the <strong>Notifications Hubs</strong> node in Server Explorer, right click, and choose <strong>Diagnose</strong>.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"NotificationsHub\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/NotificationsHub.png\" alt=\"NotificationsHub\" width=\"588\" height=\"500\" border=\"0\" />\n<h2>Virtual Machines: Configuration</h2>\nIn the 2.4 release of the Azure SDK, we continue to improve our support for using IaaS virtual machines from Visual Studio. Whether you’re building services that run on Azure virtual machines or using virtual machines to host your development or test environments, you’ll find the tools in Visual Studio make your job easier.\n\nIn this release when using Server Explorer you’ll now notice a <b>Configure</b> option on the context menu for Virtual Machines. Click <b>Configure</b> to open a virtual machine configuration window where you can view and edit properties of the VM as well as the endpoint, extension and disk configuration for that VM. You can also perform operations such as <b>Start</b>, <b>Shutdown</b>, <b>Connect</b> and <b>Capture</b> (more on that later) from the VM Configuration window.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image001[9]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0019.png\" alt=\"clip_image001[9]\" width=\"438\" height=\"426\" border=\"0\" />\n\nThe VM Configuration window also allows you to open multiple VMs at once so that you can easily compare one configuration to another.\n\nTo add an endpoint, choose the type of endpoint from the list of available endpoints then click Add. Once the endpoint is added, you can change the name and/or ports to suite your needs. Click <strong>Update</strong> to apply the changes to the VM.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image003[7]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0037.png\" alt=\"clip_image003[7]\" width=\"610\" height=\"366\" border=\"0\" />\n\nSimilarly you can add or configure extensions on a virtual machine from the configuration window. Virtual Machine extensions are software components that extend the VM functionality and simplify various VM management operations like getting the VM into a desired state or running the latest anti-malware on the VM. See the <a href=\"https://azure.microsoft.com/blog/2014/04/11/vm-agent-and-extensions-part-1/\">blog post on VM Extensions</a> for more info. To add an extension just choose the extension from the list of available extensions and click <strong>Add</strong>.  If you add an extension by mistake you can remove it if you have not yet clicked Update.\n\nDepending on the type of extension being added you may also need to provide configuration, you can do this by selecting the extension and clicking Configure. The format and schema of the extension configuration is defined by the extension publisher. You can find more information on configuring extensions by clicking the link at the bottom of the configuration dialog.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"ConfigureExtension\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ConfigureExtension.png\" alt=\"ConfigureExtension\" width=\"551\" height=\"399\" border=\"0\" />\n\nFrom the extension configuration dialog you can supply both the public and the private configuration. The public configuration can be read and updated as necessary. The private configuration is write-only. Once you apply the private configuration, it can only be read by the extension. It cannot be retrieved from Visual Studio, the portal or any other tools. The extension publisher may choose to have sensitive information such as password stored in private configuration.\n<h2>Virtual Machines: Snapshots</h2>\nSnapshots provide an easy way to capture a VM image that can be used to create replicas of the same VM. Imagine you have a virtual machine that is configured exactly the way you like; you may have installed new services, configured the firewall, and attached data disks to suite your needs. That’s a good time to create a VM image so that you can use the customized VM to create replicas in the future.\n\nTo create a VM Image click on the <strong>Capture Image</strong> button in the VM configuration window. This will bring up a dialog that allows you to provide an image label and description for your VM image. For a Windows VM you must run Sysprep on the VM to create a generalized VM image. Sysprep will remove any system specific information from Windows so that it can be easily reused as a template for new VMs. If you have run Sysprep you can select the checkbox for I have run Sysprep on the virtual machine and click the <strong>Capture</strong> button to capture the VM image.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"CaptureVM\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CaptureVM.png\" alt=\"CaptureVM\" width=\"600\" height=\"396\" border=\"0\" />\n\nOnce you have captured a VM image you can create new virtual machines based on that image snapshot. Select the <strong>Create Virtual Machine</strong> option from the context menu on the <strong>Virtual Machines</strong> node in Server Explorer to bring up the Create New Virtual Machine wizard. On the Select Image page of the wizard set the <strong>Image Type</strong> dropdown to <strong>Private Images - VM Images</strong> to display your captured VM images.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"CreateNewVM\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateNewVM.png\" alt=\"CreateNewVM\" width=\"610\" height=\"431\" border=\"0\" />\n\nYou can continue with the next pages of the wizard to provide additional information about the new VM like Machine Settings, Cloud Service and Endpoints. Once finished configuring the endpoints you can click Create to create a new virtual machine based on the VM Image you captured.\n<h2>Virtual Machines: Remote Debugging for 32-bit Virtual Machines</h2>\nVisual Studio now supports remote debugging of 32-bit applications running on Azure Virtual Machines. You can enable debugging on a specific instance of a virtual machine from the context menu in Server Explorer.\n<h2>Storage: Provision Read-Access Geo-Redundant Storage from Visual Studio<b></b></h2>\nRead-Access Geo-Redundant Storage (RA-GRS) allows you to have higher read availability for your storage account by providing “read only” access to the data replicated to the secondary location. You can now select RA-GRS as a redundancy option for your storage when creating a storage account from Visual Studio.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"CreateStorageAccount\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateStorageAccount.png\" alt=\"CreateStorageAccount\" width=\"490\" height=\"359\" border=\"0\" />\n<h2>Storage: View Storage Activity Logs</h2>\nAzure Storage logging provides a trace of executed requests against your storage account which can be used for diagnostics. If logging is enabled for blob containers, tables, or queues, the logs will appear in the $logs blob container. Similarly, the $metrics tables contain information on capacity for blob containers, and on transactions for blobs containers, queues, and tables. You now have the ability to view the $logs blob container and $metrics tables directly from Server Explorer in Visual Studio.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;\" title=\"clip_image010\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image010.png\" alt=\"clip_image010\" width=\"396\" height=\"410\" border=\"0\" />\n<h2>Cloud Services: Emulator Express as Default; Deprecation of Full Compute Emulator</h2>\nWe launched Emulator Express to address the longstanding customer ask to be able to test multi-role Cloud Services locally without requiring administrator privileges. This has since become the primary Compute emulator used by our customers for new projects. To focus our future investments on a single code base, we are deprecating the Full Emulator in favor of Emulator Express.\n\nNew Cloud Services projects in SDK 2.4 will use Emulator Express by default. Do note, however, that Emulator Express is limited to one instance per role.\n<h2>Cloud Services: New Networking Capabilities in the Service Model</h2>\nThe following capabilities have been available in IaaS via PowerShell. With today’s SDK 2.4 release they are now available for Cloud Services (Web and worker roles), via the service model.\n<h3>Internal Load Balancing (ILB)</h3>\nILB enables users to run highly available services that are accessible only within a trust boundary, in this case the Cloud Service.  The internal load balancer settings are defined at a deployment level in the service model.\n\nThe .cscfg has a deployment-wide <b>NetworkConfiguration</b> section that has been extended to contain load balancer information:\n<pre class=\"prettyprint\">&lt;NetworkConfiguration&gt;\n  …\n  &lt;LoadBalancers&gt;\n    &lt;LoadBalancer name=\"name\"&gt;\n      &lt;FrontendIPConfiguration type=\"private\" subnet=\"subnet-name\" staticVirtualNetworkIPAddress=\"static-IP-address\"/&gt;\n    &lt;/LoadBalancer&gt;\n  &lt;/LoadBalancers&gt;\n&lt;/NetworkConfiguration&gt;</pre>\nAn internal load balancer is then referenced in the endpoint definition in the .csdef. Referencing an ILB is only supported for <b>InputEndpoints</b>. Referencing ILBs is supported for all role types (worker role and Web role).\n<pre class=\"prettyprint\">&lt;WorkerRole name=\"worker-role-name\" vmsize=\"worker-role-size\" enableNativeCodeExecution=\"[true|false]\"&gt;\n  …\n  &lt;Endpoints&gt;\n    &lt;InputEndpoint name=\"input-endpoint-name\" protocol=\"[http|https|tcp|udp]\" localPort=\"local-port-number\" port=\"port-number\" certificate=\"certificate-name\" loadBalancerProbe=\"load-balancer-probe-name\" loadBalancer=\"load-balancer-name\" /&gt;\n  &lt;/Endpoints&gt;\n&lt;/WorkerRole&gt;</pre>\n<h3>Public IP addresses for virtual machines and role instances</h3>\nUsers are now able to obtain public facing, external IPs for their role instances. Any traffic on these public IP addresses, on any port, will be directed to the specified VM or role instance.\n\nThe instance level Public IPs are defined at a deployment level in the service model. The external IPs to all instances in a role needs to be added to the CSCFG schema. Example:\n<pre class=\"prettyprint\">&lt;NetworkConfiguration&gt;\n  &lt;VirtualNetworkSite name=\"VNet\"/&gt;\n  &lt;AddressAssignments&gt;\n    &lt;InstanceAddress roleName=\"VMRolePersisted\"&gt;\n      &lt;PublicIPs&gt;\n        &lt;PublicIP name=\"public-ip-name\"/&gt;\n      &lt;/PublicIPs&gt;\n    &lt;/InstanceAddress&gt;\n  &lt;/AddressAssignments&gt;\n&lt;/NetworkConfiguration&gt;</pre>\nThis syntax is designed to support different types (IPv4, IPv6) and multiple public IP addresses in the future, but for now it is restricted to exactly one public IP address. The type of the IP address is inferred to be IPv4.\n<h3>Configurable Idle Timeout for Azure Load Balancer</h3>\nThe Azure Load Balancer supports a configurable TCP idle timeout. You can now set it for a duration between 4 and 30 minutes for inbound connections, only. This configurable idle timeout period allows your application to maintain TCP connections for up to 30 minutes even if there is no activity on the connection.\n\nEndpoint settings for Cloud Services are made in the .csdef. So, in order to update the TCP timeout for a Cloud Services deployment, a deployment upgrade is required. An exception is if the TCP timeout is only specified for a Public IP. Public IP settings are in the .cscfg, and they can be updated through deployment update and upgrade.\n\nThe .csdef changes for endpoint settings are:\n<pre class=\"prettyprint\">&lt;WorkerRole name=\"worker-role-name\" vmsize=\"worker-role-size\" enableNativeCodeExecution=\"[true|false]\"&gt;\n  &lt;Endpoints&gt;\n    &lt;InputEndpoint name=\"input-endpoint-name\" protocol=\"[http|https|tcp|udp]\" localPort=\"local-port-number\" port=\"port-number\" certificate=\"certificate-name\" loadBalancerProbe=\"load-balancer-probe-name\" idleTimeoutInMinutes=\"tcp-timeout\" /&gt;\n  &lt;/Endpoints&gt;\n&lt;/WorkerRole&gt;</pre>\nThe .cscfg changes for the timeout setting on Public IPs are:\n<pre class=\"prettyprint\">&lt;NetworkConfiguration&gt;\n  &lt;VirtualNetworkSite name=\"VNet\"/&gt;\n  &lt;AddressAssignments&gt;\n    &lt;InstanceAddress roleName=\"VMRolePersisted\"&gt;\n      &lt;PublicIPs&gt;\n        &lt;PublicIP name=\"public-ip-name\" idleTimeoutInMinutes=\"timeout-in-minutes\"/&gt;\n      &lt;/PublicIPs&gt;\n    &lt;/InstanceAddress&gt;\n  &lt;/AddressAssignments&gt;\n&lt;/NetworkConfiguration&gt;</pre>\n<h2>Summary</h2>\n<a href=\"https://go.microsoft.com/fwlink/?LinkId=403040\">Visual Studio 2013 Update 3</a> and the Azure SDK 2.4 make it easier than ever to get started developing rich cloud applications. Along with the <a href=\"https://azure.microsoft.com/en-us/develop/net/\">Azure Developer Center’s growing set of .NET developer resources</a>, today’s releases should make your development experience more enjoyable and efficient.\n\nIf you don’t already have an Azure account, you can sign-up for a <a href=\"https://azure.microsoft.com/en-us/pricing/free-trial/\">free trial</a> and start using all of the above features today. Then visit the <a href=\"https://azure.microsoft.com/en-us/documentation/\">Azure Developer Center</a> to learn more about how to build apps with it.\n<h3>Credits</h3>\nThis blog article is a collaboration of multiple people. Big thanks to Saurabh Bhatia, and the Azure Cloud Tools team for their contributions."
}