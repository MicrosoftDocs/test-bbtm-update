{
    "Slug": "announcing-partitioning-support-in-the-documentdb-sdk",
    "Title": "Announcing partitioning support in the DocumentDB SDK",
    "Summary": "We are pleased to announce the release of new functionality in the .NET SDK that makes it easier to develop partition application data using Azure DocumentDB.",
    "Content": "<div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\"><strong>UPDATE as of December 27th, 2016:</strong> Partitioning is now documented and updated in the <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-partition-data\">Partitioning and scaling in Azure DocumentDB </a>documentation article.</div>\n\n<p>We are pleased to announce the release of new functionality in the .NET SDK that makes it easier to develop partition application data&nbsp;using Azure DocumentDB. During the preview of the DocumentDB service, we found that developers were implementing varied, yet similar, data access layers for partitioning data across collections, like using a lookup table of discrete values or timestamp ranges, or implementing consistent hashing over object IDs. We received clear feedback that adding helper classes or methods for boiler-plate partitioning tasks in the SDKs would simplify the development of large-scale DocumentDB applications. In order to support partitioning within the SDK, we made the following additions:</p>\n\n<ul>\n\t<li><a href=\"https://msdn.microsoft.com/library/azure/microsoft.azure.documents.client.documentclient.aspx\">DocumentClient</a> allows you to create and register <a href=\"https://msdn.microsoft.com/library/azure/microsoft.azure.documents.client.ipartitionresolver.aspx\">PartitionResolvers</a> for each database that define how documents are partitioned. Once registered, document operations like create, read-feed and queries can be made directly against databases, and they automatically get routed to the appropriate collection(s).</li>\n\t<li>We added &ldquo;out of the box&rdquo; support for the two canonical partitioning techniques &ndash; a <a href=\"https://msdn.microsoft.com/library/azure/microsoft.azure.documents.partitioning.hashpartitionresolver.aspx\">HashPartitionResolver</a> and a <a href=\"https://msdn.microsoft.com/en-us/library/azure/mt126047.aspx\">RangePartitionResolver</a><strong>.</strong>&nbsp;You can&nbsp;configure or extend these partitioners based on your data model and access patterns, or you could implement your own <a href=\"https://msdn.microsoft.com/library/azure/microsoft.azure.documents.client.ipartitionresolver.aspx\">IPartitionResolver</a> from scratch.</li>\n</ul>\n\n<p>&nbsp; To learn more, visit our partitioning tutorial <a href=\"https://azure.microsoft.com/en-us/documentation/articles/documentdb-sharding/\">here</a>, or get started by downloading version 1.1.0 of the .NET SDK from Nuget <a href=\"https://www.nuget.org/packages/Microsoft.Azure.DocumentDB/\">here</a>. We have also created a <a href=\"https://github.com/Azure/azure-documentdb-net/tree/master/samples/partitioning\">Github project</a> containing code samples on how to use these new classes or extend them to implement your own custom partitioning logic to fit your scenarios. If you need any help, please reach out to us on the&nbsp;<a href=\"https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=AzureDocumentDB\">Azure DocumentDB Developer Forums on MSDN</a>&nbsp;or the&nbsp;<a href=\"https://stackoverflow.com/questions/tagged/azure-documentdb\">developer forums on stack overflow</a>. We are planning to roll out partitioning support in the other SDKs based on your feedback. Please let us know if you would like any additional partitioning functionality in the .NET SDK, or partitioning support in any of the other SDKs through the <a href=\"https://feedback.azure.com/forums/263030-documentdb\">Azure Feedback</a> forum.</p>\n"
}