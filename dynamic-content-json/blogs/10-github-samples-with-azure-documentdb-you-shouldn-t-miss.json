{
    "Slug": "10-github-samples-with-azure-documentdb-you-shouldn-t-miss",
    "Title": "10 GitHub samples with Azure DocumentDB you shouldn’t miss!",
    "Summary": "Azure DocumentDB is a fully managed, multi-model, scalable, queryable, schema-free NoSQL database service built for modern applications: mobile, web, IoT, bots, AI, etc. Recently, I went on GitHub…",
    "Content": "<p><strong>As of May 10th 2017,</strong></p>\n\n<p><strong>Azure Cosmos DB is Microsoft&rsquo;s globally distributed multi-model database. Azure Cosmos DB was built from the ground up with global distribution and horizontal scale at its core. It offers turnkey global distribution across any number of Azure regions by transparently scaling and replicating your data wherever your users are. Elastically scale throughput and storage worldwide, and pay only for the throughput and storage you need. Azure Cosmos DB guarantees single-digit-millisecond latencies at the 99th percentile anywhere in the world, offers multiple well-defined consistency models to fine-tune performance, and guarantees high availability with multi-homing capabilities&mdash;all backed by industry leading service level agreements (SLAs).&nbsp;</strong></p>\n\n<p><strong>Azure Cosmos DB is truly schema-agnostic; it automatically indexes all the data without requiring you to deal with schema and index management. It&rsquo;s also multi-model, natively supporting document, key-value, graph, and column-family data models. With Azure Cosmos DB, you can access your data using APIs of your choice, as DocumentDB SQL (document), MongoDB (document), Azure Table Storage (key-value), and Gremlin (graph) are all natively supported.</strong></p>\n\n<hr>\n<p><a href=\"https://azure.microsoft.com/en-us/services/documentdb/\">Azure DocumentDB</a> is a fully managed, multi-model, scalable, queryable, schema-free NoSQL database service built for modern applications: mobile, web, IoT, bots, AI, etc. Recently, I went on GitHub and have found a lot of useful material and links to step-by-step tutorials and examples. Below are the top 10 that anyone starting to build an app backed by planet-scale NoSQL should know about. There is lots more. So head on over and learn about this cool new NoSQL planet-scale database service.</p>\n\n<p><img alt=\"\" height=\"487\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0451fcb0-60cc-4b19-9ff7-6e271fff4b5c.png\" width=\"865\"></p>\n\n<h2>1. <a href=\"https://github.com/Azure/azure-documentdb-dotnet\">Azure/azure-documentdb-dotnet</a></h2>\n\n<p>In this <a href=\"https://github.com/Azure/azure-documentdb-dotnet\">repo</a>, you can find the <a href=\"https://github.com/Azure/azure-documentdb-dotnet/tree/master/samples\"><strong>samples</strong></a> and utilities relating to <a href=\"https://azure.microsoft.com/en-us/resources/samples/\">Azure DocumentDB and the .NET SDK</a> and how to use them. The samples demonstrate how to use every method and operation of the .NET SDK, and <strong>searchabletodo</strong> is a sample ASP.NET MVC web application that shows how to build an ASP.NET MVC web application with DocumentDB and then further enrich it with <a href=\"https://azure.microsoft.com/en-us/services/search/\">Azure Search</a>. Another great example in this repo is a <a href=\"https://github.com/Azure/azure-documentdb-dotnet/tree/2fe1fad6a1a7f684d7253190640ecb301828b35f/samples/xamarin/UserItems\"><strong>Xamarin sample</strong></a> which illustrates how to use DocumentDB built-in authorization engine to implement per-user data pattern for a <a href=\"https://azure.microsoft.com/en-us/blog/announcing-azure-documentdb-sdk-for-xamarin/\"><strong>Xamarin mobile app</strong></a>. It is a simple multi-user ToDo list app allowing users to login using Facebook Auth and manage their to do items. After playing with this sample, you can then go further with Xamarin and build any IoS or Android app on top of DocumentDB.</p>\n\n<p><img alt=\"\" height=\"434\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/705ab951-ae53-4cc6-8641-f77434a08b3e.png\" width=\"772\"></p>\n\n<p>The samples will walk you through how to best interact with the service using Client SDK. Specifically:</p>\n\n<ul>\n\t<li><strong>CollectionManagement </strong>&ndash; shows CRUD operations on DocumentCollection resources.</li>\n\t<li><strong>DatabaseManagent</strong> &ndash; shows CRUD operations on Database resources.</li>\n\t<li><strong>DocumentManagement</strong> &ndash; shows CRUD operations on Document resources.</li>\n\t<li><strong>IndexManagement</strong> &ndash; shows samples on how to customize the Indexing Policy for a Collection should you need to.</li>\n\t<li><strong>Partitioning</strong> &ndash; included samples for common partitioning scenarios using the .NET SDK.</li>\n\t<li><strong>Queries</strong> &ndash;&nbsp; shows how to query using LINQ and SQL.</li>\n\t<li><strong>ServerSideScripts</strong> &ndash; shows how to create and execute Stored Procedures, Triggers and User Defined Functions.</li>\n\t<li><strong>UserManagement</strong> &ndash; shows CRUD operations on User and Permission resources.</li>\n\t<li><strong>Spatial</strong> &ndash; shows how to work with GeoJSON and DocumentDB geospatial capabilities.</li>\n</ul>\n\n<p>After walking through these samples, you should have a good idea of how to get going and how to make use of the various APIs interacting with the NoSQL service in Azure.</p>\n\n<h2>2. <a href=\"https://github.com/mingaliu/DocumentDBStudio\">mingaliu/DocumentDBStudio</a></h2>\n\n<p><img alt=\"\" height=\"438\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/45042989-9d82-446f-9874-d77ee4731e36.png\" width=\"779\"></p>\n\n<p>This <a href=\"https://github.com/mingaliu/DocumentDBStudio\">repo</a> contains<strong> </strong><a href=\"https://github.com/mingaliu/DocumentDBStudio\"><strong>DocumentDBStudio</strong></a> -&nbsp; a client management viewer/explorer for DocumentDB service. Currently it supports:</p>\n\n<ol>\n\t<li>Easy browsing of DocumentDB resources, which enables you to learn DocumentDB resource model very quickly.</li>\n\t<li>Create, Read, Update, Delete (CRUD) and Query operations for every DocumentDB resources and resource feed.</li>\n\t<li>Support of SQL or UDF query. You can execute Javascript stored procedure or trigger right from DocumentDBStudio.</li>\n\t<li>Inspection of headers (for quota, usage, RG charge, etc.) for every request operation. It also supports three connection modes: TCP, HTTPDirect, and Gateway.</li>\n\t<li>Support of various RequestOptions (for pre/post trigger, sessionToken, consistency model etc), FeedOptions(for paging, enableScanforQuery etc), IndexingPolicy (for indexingMode, indexingType, indexingPath etc).</li>\n\t<li>PrettyPrint the output JSON.</li>\n\t<li>Bulk import of JSON files.</li>\n</ol>\n\n<p>It is simply a &ldquo;good IDE&rdquo; for the &ldquo;natives&rdquo; of DocumentDB. Give it a try.</p>\n\n<h2>3. <a href=\"https://github.com/Azure/azure-documentdb-node\">Azure/azure-documentdb-node</a></h2>\n\n<p>This <a href=\"https://github.com/Azure/azure-documentdb-node\">repo</a> provides a <a href=\"https://azure.microsoft.com/en-us/develop/nodejs/\">Node.js</a> module that makes it easy to interact with Azure DocumentDB using Node.js - an open-source, cross-platform JavaScript runtime environment suited for developing a diverse variety of tools and applications. Node.js aims to optimize throughput and scalability in Web applications with many input/output operations, as well as for real-time Web applications (e.g., real-time communication programs and browser games). Combining it with DocumentDB service gives you a really powerful combination and agility in building up an app and then scaling it up very quickly.</p>\n\n<p><img alt=\"\" height=\"390\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/85123496-b3f7-427b-b7d1-c6bbab7ff775.png\" width=\"693\"></p>\n\n<p>If you are developing using Node.js and combining it with DocumentDB, see <a href=\"https://azure.microsoft.com/en-us/develop/nodejs/\">Node.js Developer Center</a> and the Microsoft Azure DocumentDB Node.js SDK Documentation. Also, to get started, watch this <a href=\"https://www.youtube.com/watch?v=UAE7h9PCZjA\">YouTube video</a>. The <a href=\"https://github.com/Azure/azure-documentdb-node/tree/master/samples\">samples</a> in the repo were built using the <a href=\"https://www.visualstudio.com/vs/node-js/\">Node.js Tools for Visual Studio</a> and include njsproj files accordingly. However, you do not need Visual Studio to run these samples. Just ignore the nsjprof files, if you wish, and open the app.js in your choice of editor such as <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>, or even a text editor, such as Sublime. The choice is yours!</p>\n\n<h2>4. <a href=\"https://github.com/Azure/azure-documentdb-datamigrationtool\">Azure/azure-documentdb-datamigrationtool</a></h2>\n\n<p>This repo contains the <a href=\"https://github.com/Azure/azure-documentdb-datamigrationtool\">DocumentDB Data Migration Tool</a> - an open source solution to import data to DocumentDB from a variety of sources with ease and simplicity. The migration tool supports migration of data from the following sources:</p>\n\n<ul>\n\t<li>Azure Tables</li>\n\t<li>JSON files</li>\n\t<li>MongoDB</li>\n\t<li>SQL Server</li>\n\t<li>CSV files</li>\n\t<li>RavenDB</li>\n\t<li>Amazon DynamoDB</li>\n\t<li>HBase</li>\n\t<li>DocumentDB collections</li>\n</ul>\n\n<p>While the import tool includes a graphical user interface (dtui.exe), it can also be driven from the command line (dt.exe). In fact, there is an option to output the associated command after setting up an import through the UI. Tabular source data (e.g. SQL Server or CSV files) can be transformed such that hierarchical relationships (sub-documents) can be created during import. Check it out to learn more about data source options, sample command lines to import from each source, target options, and viewing import results.</p>\n\n<p><img alt=\"\" height=\"511\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a1545530-a301-444f-9d74-b8f90adde912.png\" width=\"908\"></p>\n\n<h2>5. <a aria-label=\"GitHub repo featuring Python sample solutions\" href=\"https://github.com/Azure/azure-documentdb-python\">Azure/azure-documentdb-python</a></h2>\n\n<p>This <a aria-label=\"GitHub repo featuring Python sample solutions\" href=\"https://github.com/Azure/azure-cosmos-python\">repo</a> contains Python sample solutions showing common operations on Azure DocumentDB. You will learn how to use Azure DocumentDB to store and access data from a Python web application hosted on Azure and presumes that you have some prior experience using Python and Azure websites. <img alt=\"\" height=\"438\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cbb22141-c222-48a0-b557-a6f2424a6300.png\" width=\"779\"> Another good tutorial to follow up with is <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-python-application\">Python Flask Web Application Development with DocumentDB</a>, where you will build a simple voting application that allows you to vote for a poll using Python against DocumentDB.</p>\n\n<h2>6. <a href=\"https://github.com/Azure/azure-documentdb-node-q\">Azure/azure-documentdb-node-q</a></h2>\n\n<p>This repo has DocumentDB Node.js Q promises wrapper. If you don&rsquo;t know anything about Q promises, read Promises in Javascript With Q. The repo project provides a &ldquo;Hello world example code using Q promises&rdquo; that makes it very easy to interact with Azure DocumentDB. You will seriously witness here that DocumentDB is built with a deep commitment to the JSON and JavaScript. This approach of &ldquo;JavaScript as a modern day T-SQL&rdquo; frees application developers from the complexities of type system mismatches and object-relational mapping technologies. The samples in this repo will help you get going with the JavaScript SDK to interact with the <a href=\"https://azure.microsoft.com/services/documentdb\">Azure DocumentDB</a> service.<img alt=\"\" height=\"472\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/89986f4b-802f-4821-992d-61fc949741a7.png\" width=\"838\"></p>\n\n<h2>7. <a href=\"https://github.com/Azure/azure-documentdb-js-server\">Azure/azure-documentdb-js-server</a></h2>\n\n<p>Before you head to this repo, maybe watch this <a href=\"https://channel9.msdn.com/Blogs/Azure/Azure-Demo-A-Quick-Intro-to-Azure-DocumentDBs-Server-Side-Javascript\">video</a> first - to get a brief introduction to Azure DocumentDB&#39;s server-side programming model. You will learn how DocumentDB&rsquo;s language integrated, transactional execution of JavaScript lets developers write stored procedures, triggers and user defined functions (UDFs) natively in JavaScript. This allows developers to write application logic which can be shipped and executed directly on the database storage partitions.</p>\n\n<p><img alt=\"\" height=\"455\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7e52b9ba-67f5-4135-bdd1-a758d8382852.png\" width=\"809\"></p>\n\n<h2>8. <a href=\"https://github.com/Azure/azure-documentdb-java\">Azure/azure-documentdb-java</a></h2>\n\n<p>This project provides a client library in Java that makes it easy to interact with Azure DocumentDB. In this repo, you will find a number of Java code samples working with DocumentDB. If you feel comfortable and up to it, you can build the <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-java-application\">entire Java web application using DocumentDB</a> in just a few steps. For documentation please see the Microsoft Azure <a href=\"https://azure.microsoft.com/en-us/develop/java/\">Java Developer Center</a> and the JavaDocs.</p>\n\n<p><img alt=\"\" height=\"444\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a22dea56-5dfd-404d-98e0-5898cdd2ce56.png\" width=\"789\"></p>\n\n<h2>9. Azure/azure-documentdb-hadoop</h2>\n\n<p>This repo provides a client library in Java that allows Microsoft Azure DocumentDB to act as an input source or output sink for Hadoop MapReduce, Hive and Pig jobs. This tutorial shows you how to run Apache Hive, Apache Pig, and Apache Hadoop MR jobs on Azure HDInsight with DocumentDB&#39;s Hadoop connector. DocumentDB&#39;s Hadoop connector allows DocumentDB to act as both a source and sink for Hive, Pig, and MapReduce jobs. This tutorial uses DocumentDB as both the data source and destination for Hadoop jobs, and shows how to do it. I recommend getting started by watching the following video, where we run through a Hive job using DocumentDB and HDInsight.</p>\n\n<p>Hive, Pig, and MapReduce jobs. <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-run-hadoop-with-hdinsight\">This tutorial</a> uses DocumentDB as both the data source and destination for Hadoop jobs, and shows how to do it. I recommend getting started by watching the following <a href=\"https://sec.ch9.ms/ch9/86a2/50ac21ec-dd12-4739-9c42-702a447886a2/documentdbhadoopconnector_mid.mp4\">video</a>, where we run through a Hive job using DocumentDB and HDInsight.</p>\n\n<p><img alt=\"\" height=\"442\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f738f278-3d36-4fb7-9258-02ab8606f7b3.png\" width=\"786\"></p>\n\n<h2>10. <a href=\"https://github.com/Azure-Samples/documentdb-node-todo-app\">Azure-Samples/documentdb-node-todo-app</a></h2>\n\n<p>Finally, <a href=\"https://github.com/Azure-Samples/documentdb-node-todo-app\">this repo</a> contains the source code for a complete application. The sample shows how to use the Microsoft Azure DocumentDB service to store and access data from a Node.js Express application hosted on Azure Websites.</p>\n\n<p><img alt=\"\" height=\"413\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31e55f3e-7d7d-4b1c-a1fc-bb5ad27a0f42.png\" width=\"799\"></p>\n\n<p>For a complete end-to-end walk-through of creating this application, please read the <a href=\"https://azure.microsoft.com/en-us/documentation/articles/documentdb-nodejs-application/\">full tutorial on the Azure documentation page</a>. The code included in this sample is intended to get you going with a simple Node.js Express application that connects to Azure DocumentDB and showing how to interact with DocumentDB using the <a href=\"https://www.npmjs.com/package/documentdb\">documentdb npm package</a>. It is not intended to be a set of best practices on how to build scalable enterprise grade web applications, but it&rsquo;s a great start.</p>\n\n<p><a href=\"https://twitter.com/rimmanehme\">@rimmanehme</a></p>\n\n<p>P.S. If you&rsquo;ve never even heard the word &ldquo;NoSQL&rdquo;, first of all &ndash; wow! You are at the end of the blog, and still paying attention. That&rsquo;s awesome! Second, a quick way to learn about DocumentDB and see it in action is to follow these three steps:</p>\n\n<ol>\n\t<li>Watch the two minute <a href=\"https://azure.microsoft.com/documentation/videos/what-is-azure-documentdb/\">What is DocumentDB</a>? video, which introduces the benefits of using DocumentDB.</li>\n\t<li>Watch the three minute <a href=\"https://azure.microsoft.com/documentation/videos/create-documentdb-on-azure/\">Create DocumentDB on Azure</a> video, which highlights how to get started with DocumentDB by using the Azure Portal.</li>\n\t<li>Visit the <a href=\"https://www.documentdb.com/sql/demo\">Query Playground</a>, where you can walk through different activities to learn about the rich querying functionality available in DocumentDB. Then, head over to the Sandbox tab and run your own custom SQL queries and experiment with DocumentDB.</li>\n</ol>\n\n<p><img alt=\"\" height=\"475\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e03710e7-e59f-49e6-ac64-db2566d5e4f5.png\" width=\"845\"></p>\n"
}