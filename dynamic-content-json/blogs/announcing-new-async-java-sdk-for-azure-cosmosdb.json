{
    "Slug": "announcing-new-async-java-sdk-for-azure-cosmosdb",
    "Title": "Announcing new Async Java SDK for Azure #CosmosDB",
    "Summary": "We’re excited to announce a new asynchronous Java SDK for Cosmos DB’s SQL API.",
    "Content": "<p>We&rsquo;re excited to announce a new <a href=\"https://docs.microsoft.com/en-us/azure/cosmos-db/sql-api-sdk-async-java\" target=\"_blank\">asynchronous Java SDK for Cosmos DB&rsquo;s SQL API</a> open sourced on <a href=\"https://github.com/Azure/azure-cosmosdb-java\" target=\"_blank\">GitHub</a>. This SDK leverages the popular <a href=\"https://github.com/ReactiveX/RxJava\" target=\"_blank\">RxJava</a> library to add a new async API surface area for composing event-based programs with observable sequences. It also features an improved user experience and is also lighter weight than our previous synchronous Java SDK (yielding a 2x performance improvement on the client-side)!</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c3736840-bcde-4aec-ba31-b74cfa43f6ef.png\"><img alt=\"image\" border=\"0\" height=\"312\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ffa55d90-3a5a-4486-a0ee-d3c1b46e99df.png\" style=\"background-image: none; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; margin-right: auto; border-image: none\" title=\"image\" width=\"624\"></a></p>\n\n<p>You can add the library from <a href=\"https://mvnrepository.com/artifact/com.microsoft.azure/azure-cosmosdb/1.0.1\" target=\"_blank\">Maven</a> using:</p>\n\n<pre class=\"prettyprint\">\n&lt;dependency&gt;\n    &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;\n    &lt;artifactId&gt;azure-cosmosdb&lt;/artifactId&gt;\n    &lt;version&gt;1.0.1&lt;/version&gt;\n&lt;/dependency&gt;\n</pre>\n\n<h3>Connect to Cosmos DB</h3>\n\n<p>The new SDK uses convenient builder pattern to specify connectivity options:</p>\n\n<pre class=\"prettyprint\">\nasyncClient = new AsyncDocumentClient.Builder()\n                         .withServiceEndpoint(HOST)\n                         .withMasterKey(MASTER_KEY)\n                         .withConnectionPolicy(ConnectionPolicy.GetDefault())\n                         .withConsistencyLevel(ConsistencyLevel.Eventual)\n                         .build();\n</pre>\n\n<h3>Insert an item</h3>\n\n<p>To execute and coordinate Cosmos DB data operations asynchronously, and get the results you use observables:</p>\n\n<pre class=\"prettyprint\">\nDocument doc = \n      new Document(String.format(&quot;{ &#39;id&#39;: &#39;doc%d&#39;, &#39;counter&#39;: &#39;%d&#39;}&quot;, 1, 1));\n\nObservable&lt;ResourceResponse&lt;Document&gt;&gt; createDocumentObservable =\n      asyncClient.createDocument(collectionLink, doc, null, false);\n\ncreateDocumentObservable\n      .single()           // we know there will be one response\n      .subscribe(documentResourceResponse -&gt; {\n            System.out.println(documentResourceResponse.getRequestCharge());\n      });\n</pre>\n\n<p>Note that the createDocument request will be issued only once .subscribe is called on the corresponding observable result.</p>\n\n<h3>Query</h3>\n\n<p>In Cosmos DB queries can return multiple pages of data. To efficiently read all the pages, simply subscribe and read all pages:</p>\n\n<pre class=\"prettyprint\">\nObservable&lt;FeedResponse&lt;Document&gt;&gt; documentQueryObservable = asyncClient\n                .queryDocuments(getCollectionLink(), &quot;SELECT * FROM root&quot;, options);\n\n// forEach(.) is an alias for subscribe(.)\ndocumentQueryObservable.forEach(page -&gt; {\n     for (Document d : page.getResults()) {    \n            System.out.println(d.toJson());\n     }\n});\n</pre>\n\n<p>We just barely scratched the surface. <a href=\"https://github.com/Azure/azure-cosmosdb-java\" target=\"_blank\">Learn more about Azure Cosmos DB async SDK for Java</a>.</p>\n\n<p>If you are using Azure Cosmos DB, please feel free to reach out to us at <a href=\"mailto:AskCosmosDB@microsoft.com\">AskCosmosDB@microsoft.com</a> any time. If you are not yet using Azure Cosmos DB, you can try Azure Cosmos DB for free today, no sign up or credit card is required. If you need any help or have questions or feedback, please reach out to us any time. For the latest Azure Cosmos DB news and features, please stay up-to-date by following us on Twitter <a href=\"https://twitter.com/search?q=%23cosmosdb\" target=\"_blank\">#CosmosDB</a>, <a href=\"https://twitter.com/AzureCosmosDB\" target=\"_blank\">@AzureCosmosDB</a>. We look forward to see what you will build with Azure Cosmos DB!</p>\n\n<p>- Your friends at Azure Cosmos DB</p>\n"
}