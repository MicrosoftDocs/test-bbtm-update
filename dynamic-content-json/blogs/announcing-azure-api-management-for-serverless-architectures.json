{
    "Slug": "announcing-azure-api-management-for-serverless-architectures",
    "Title": "Announcing Azure API Management for serverless architectures",
    "Summary": "Azure API Management is a fully managed service that enables customers to publish, secure, transform, maintain, and monitor APIs. ",
    "Content": "<p><a href=\"https://azure.microsoft.com/en-us/services/api-management/\" target=\"_blank\">Azure API Management</a> is a fully managed service that enables customers to publish, secure, transform, maintain, and monitor APIs. With a few clicks in the Azure portal, you can create an API fa&ccedil;ade that acts as a &ldquo;front door&rdquo; through which external and internal applications can access data or business logic implemented by your custom-built backend services, running on Azure, for example on App Service or Azure Kubernetes Service, or hosted outside of Azure, in a private datacenter or on-premises. API Management handles all the tasks involved in mediating API calls, including request authentication and authorization, rate limit and quota enforcement, request and response transformation, logging and tracing, and API version management.</p>\n\n<p>Starting today, Azure customers can choose the new Consumption tier when they are creating a new API Management instance. This Consumption tier, essentially a variant of API Management designed and implemented around serverless principles, will allow more customers to enjoy the benefits of API management, and will become a more organic fit for the emerging breed of applications built using <a href=\"https://azure.microsoft.com/en-us/solutions/serverless/\" target=\"_blank\">serverless</a> technologies.</p>\n\n<p>APIM Consumption tier enables the following key use cases we have been hearing about from customers:</p>\n\n<ul>\n <li>API gateway for microservices implemented using serverless technologies such as Functions and Logic Apps.</li>\n <li>API gateway providing a simplified and secure fa&ccedil;ade for serverless Azure resources such as Service Bus queues and topics, Azure storage, and others.</li>\n <li>API gateway for traditional backends where API traffic has large spikes but stays low most of the time.</li>\n</ul>\n\n<p>If any of the use cases above look relevant, we hope you would give the new tier a try and let us know what you think.</p>\n\n<h2>Tiers compared</h2>\n\n<p>To understand the essence of the new tier let&rsquo;s compare it with the existing ones.</p>\n\n<p>API Management launched with just two tiers &ndash; Developer and Standard. Over the time we have added the Premium tier with high-end features for enterprise customers and the Basic tier as an entry-level production tier. All these tiers have a common architecture where each API Management service instance is assigned a set of resources reserved for its exclusive use. Security isolation, instantly available capacity, and protection from noisy neighbors are among the top benefits of this approach. However, they came with a few side effects - relatively high provisioning and scaling latencies and non-consumption-based pricing, which don&rsquo;t fit well with the new breed of solutions based on the serverless application model.</p>\n\n<p>Consumption tier uses the same underlying service components as the previous tiers but employs an entirely different architecture based on shared, dynamically allocated resources. Consequently, it aligns perfectly with serverless computing model, i.e., no infrastructure to manage, no idle capacity, high-availability, automatic scaling, and usage-based pricing, all of which make it an especially good choice for solutions that involve exposing serverless resources as APIs. There are a few tradeoffs involved when you choose the Consumption tier. The two most important are a <a href=\"https://aka.ms/apimfeatures\">curated feature set </a>and enforced usage limits. The table below summarizes key points of comparison between the tiers.</p>\n\n<table border=\"1\" cellpadding=\"2\">\n <tbody>\n  <tr>\n   <td valign=\"top\"><strong>Consumption</strong><sup> NEW</sup></td>\n   <td valign=\"top\"><strong>Developer </strong>|<strong> Basic</strong> |<strong> Standard </strong>|<strong> Premium</strong></td>\n  </tr>\n  <tr>\n   <td valign=\"top\">No infrastructure to provision or manage</td>\n   <td valign=\"top\">No infrastructure to provision or manage</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">Built-in high availability</td>\n   <td valign=\"top\">Built-in high availability<sup>1</sup></td>\n  </tr>\n  <tr>\n   <td valign=\"top\">Built-in auto-scaling (down to zero)</td>\n   <td valign=\"top\">Manual or external auto-scaling<sup>2</sup></td>\n  </tr>\n  <tr>\n   <td valign=\"top\">Consumption-based micro billing</td>\n   <td valign=\"top\">Billing based on reserved capacity</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">No reserved capacity</td>\n   <td valign=\"top\">Reserved capacity</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">Shared resources</td>\n   <td valign=\"top\">Dedicated resources</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">On-demand activation</td>\n   <td valign=\"top\">Always on</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">Curated set of features</td>\n   <td valign=\"top\">Full set of features<sup>3</sup></td>\n  </tr>\n  <tr>\n   <td valign=\"top\"><a href=\"https://aka.ms/apimlimits\" target=\"_blank\">Usage limits</a></td>\n   <td valign=\"top\">Ungoverned</td>\n  </tr>\n </tbody>\n</table>\n\n<p><sup>1</sup>With the exception of the Developer tier</p>\n\n<p><sup>2</sup>Azure Monitor Autoscale available in Standard and Premium tiers</p>\n\n<p><sup>3</sup>Availability of a few features varies across the tiers</p>\n\n<h2>New features</h2>\n\n<p>The following two new features, now available only in the Consumption tier, will soon be available in the rest of the API Management tiers.</p>\n\n<p><strong>Bring Your Own Cache (BYOC): </strong>Response caching is an effective and widely used technique for both improving API latencies and reducing the load on API backends. This feature allows customers to configure API Management service to <a href=\"https://aka.ms/apimbyoc\">use an externally provisioned, Redis-compatible cache</a>. Full control over cache configuration, the ability to preload and purge cache content, and ability to scale cache size independently from the API Management service instance that uses it, are the key benefits of BYOC. It is also the only option for enabling response caching in the Consumption tier because, unlike the other tiers, it doesn&rsquo;t come with a built-in cache. We modified existing <a href=\"https://docs.microsoft.com/en-us/azure/api-management/api-management-caching-policies#CachingPolicies\" target=\"_blank\">caching policies</a> to work seamlessly with both integrated and external cache configurations.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4359badb-d747-4ef9-aea3-05b57c7e9af1.png\"><img alt=\"Bring your own cache in the Consumption tier\" border=\"0\" height=\"568\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/76610001-5efe-4896-9caf-d1d91672af53.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"Bring your own cache in the Consumption tier\" width=\"1233\"></a></p>\n\n<p><strong>More flexible subscriptions:</strong> <a href=\"https://aka.ms/apimsubscriptions\">Subscription </a>is essentially a named container for a set of API keys (two to be exact - primary and secondary). Previously, subscriptions had to be owned by a user and supported a single, API product scope. To streamline key management, we&#39;ve made a few changes. We now allow &quot;standalone&quot; subscriptions, not associated with a user. We also added two more subscription scopes - all APIs and a single API. So now it&#39;s possible, for example, to create keys granting access to an API (or all APIs within an API Management instance), without needing to create a product and add the API (or all APIs) to it first! Moreover, each API Management instance now comes with an immutable, all-APIs subscription, which makes it even more straightforward to test and debug APIs within the Test console.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a4e7db6f-410f-441b-bad3-ed9d4702937a.png\"><img alt=\"Subscription options\" border=\"0\" height=\"601\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c5ca1752-3d5b-44f0-a369-167045cf1ef2.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"Subscription options\" width=\"1430\"></a></p>\n\n<h2>Remaining work</h2>\n\n<p>We have been working on the Consumption tier since last spring and are very excited to finally share it with you. However, there is still work left to do, before we can call it done. Here are some important features and improvements you should expect to see over the coming months.</p>\n\n<ul>\n <li>Custom hostname and certificate</li>\n <li>&quot;One-click&quot; upgrade to a higher API Management tier</li>\n <li>Faster provisioning time (it&rsquo;s already super-fast compared with older tiers, but we hope to improve it further)</li>\n <li>Reduced &ldquo;cold start&rdquo; latency (we haven&rsquo;t done much in this area yet, and the latency is far from where it needs to be)</li>\n <li>Broad availability in the public Azure regions (we plan to have full the Consumption tier available in every region where API Management is available)</li>\n <li>&ldquo;Add API&rdquo; experiences for additional serverless and PaaS resources (expect to see new tiles on the Add API page)</li>\n</ul>\n\n<h2>Availability</h2>\n\n<p>We are excited to announce the immediate availability of the <a href=\"https://aka.ms/apimpricing\" target=\"_blank\">Consumption tier</a> in preview in the North Central US, West US, West Europe, North Europe, Southeast Asia, and Australia East regions.</p>\n\n<p>Please give it a <a href=\"https://portal.azure.com/#create/Microsoft.ApiManagement\" target=\"_blank\">try</a> &ndash; <a href=\"https://docs.microsoft.com/en-us/azure/api-management/get-started-create-service-instance\" target=\"_blank\">create</a> a new service and see how easy it is to publish an API by importing a <a href=\"https://docs.microsoft.com/en-us/azure/api-management/import-function-app-as-api\" target=\"_blank\">Function</a> or <a href=\"https://docs.microsoft.com/en-us/azure/api-management/import-logic-app-as-api\" target=\"_blank\">Logic App</a>.</p>\n\n<p>Want to learn more about how to build serverless APIs? Check out the webinar, &ldquo;<a href=\"https://info.microsoft.com/ww-ondemand-build-serverless-api-with-nodejs.html\" target=\"_blank\">Build Serverless APIs with Node.js on Azure Functions</a>.&rdquo;</p>\n\n<p><a href=\"https://aka.ms/apimso\" target=\"_blank\">Let us know what you think</a>!</p>\n\n<p style=\"text-align: center;\"><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"270\" scrolling=\"no\" src=\"https://channel9.msdn.com/Shows/Azure-Friday/Azure-API-Management-for-serverless-applications/player?format=ny\" width=\"480\"></iframe></p>\n"
}