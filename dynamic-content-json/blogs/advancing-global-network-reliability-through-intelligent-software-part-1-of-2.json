{
    "Slug": "advancing-global-network-reliability-through-intelligent-software-part-1-of-2",
    "Title": "Advancing global network reliability through intelligent software—part 1 of 2",
    "Summary": "In our two-part series on advancing global network reliability through intelligent software, we explain how we’ve approached our network design, and how we’re constantly working to improve both reliability and performance.",
    "Content": "<p style=\"margin-left: 40px;\"><em>&ldquo;Microsoft&rsquo;s global network connects over 60 Azure regions, over 220 Azure data centers, over 170 edge sites, and spans the globe with more than 165,000 miles of terrestrial and subsea fiber. The global network connects to the rest of the internet via peering at our strategically placed edge points of presence (PoPs) around the world. Every day, millions of people around the globe access Microsoft Azure, Office 365, Dynamics 365, Xbox, Bing, and many other Microsoft cloud services. This translates to trillions of requests per day and terabytes of data transferred each second on our global network. It goes without saying that the reliability of this global network is critical, so I&rsquo;ve asked Principal Program Manager <strong>Mahesh Nayak</strong> and Principal Software Engineer <strong>Umesh Krishnaswamy</strong> to write this two-part post in our <a href=\"https://www.aka.ms/AdvancingReliability\" target=\"_blank\">Advancing Reliability series</a>. They explain how we&rsquo;ve approached our network design, and how we&rsquo;re constantly working to improve both reliability and performance.&rdquo;&mdash;</em>Mark Russinovich, CTO, Azure</p>\n\n<hr>\n<p><em>Read <a href=\"https://azure.microsoft.com/en-us/blog/advancing-global-network-reliability-through-intelligent-software-part-2-of-2/\">Advancing global network reliability through intelligent software part 2</a>.</em></p>\n\n<p>Microsoft&rsquo;s global network is analogous to a highway system. Highways connect major cities and roadways connect small cities to major cities. In this analogy, data centers grouped into Azure regions are the major cities, and the edge PoPs are the small cities. Networking assets in data centers, at the edge, and across the global network are one pool shared by all. Think of them as a common highway with multiple lanes that all vehicles can use. This allows us to share resources, adapt to changes, and develop features that benefit all customers. Internet service providers, cloud providers, and content delivery networks have similar networks&mdash;some global and some local, so we link up with their networks at edge PoPs. Traffic moving between our data centers, and traffic between any one data center and the edge, all stays on Microsoft&rsquo;s highway system.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/30da6c42-c33b-4ebb-9289-c4c35876aef9.png\"><img alt=\"Azure Global Network map.\" border=\"0\" height=\"525\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f1b2ac0-1d6e-4331-86e4-748ec2a7a13f.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"Azure Global Network map.\" width=\"1024\"></a></p>\n\n<p>Network system reliability is a top priority for us, and we are continuously making improvements to our systems. Although network incidents at our hyperscale are inevitable, we take these opportunities to learn from the various contributing factors and re-think our availability design principles to make our services even more reliable. In early October 2020, we experienced a rare service incident that caused network congestion on some routes for a short duration, which impacted other Microsoft cloud services. There are great learnings from this particular issue, and we have incorporated those learnings in our software and processes&mdash;and called them out below.</p>\n\n<h2>Key design principles</h2>\n\n<p>Like a highway system that offers fast and reliable transportation to passengers, we have designed our global network to provide maximum reliability and performance with the following guidelines.</p>\n\n<ul>\n\t<li><strong>Well-provisioned network with redundant topology:</strong> Design hardware and software failure domains with redundancy, to handle multiple simultaneous failures and eliminate single points of failure. Design the network with enough capacity to meet service level objectives during times of high demand or crisis.</li>\n\t<li><strong>De-risk changes:</strong> Change is constant in a large-scale network. However, small changes can lead to major, unforeseen repercussions. Follow safe deployment practices to reduce blast radii, have automatic rollbacks, allow sufficient bake time between deployment phases, and eliminate manual touches.</li>\n\t<li><strong>Intelligent software systems to manage, monitor, and operate the network:</strong> The physical infrastructure is always prone to risks such as fiber cuts, hardware failure, demand surges, destructive weather events, and sabotage. Build software systems that maintain real-time views of topology, demands, traffic routing, failures, performance, and automatically recover from network events.</li>\n\t<li><strong>Proximity:</strong> Customer traffic should flow on the global network for the bulk of its journey, so that we can control the network performance. All inter-regional traffic stays entirely within our network.</li>\n\t<li><strong>Feedback loop and using AI to improve:</strong> Continuous learning is critical to our reliability mission. Every incident is thoroughly analyzed to determine root cause(s) and any contributing factors; understanding what went wrong is an important learning opportunity. Use self-learning with telemetry data to perform quicker triage, deeper analysis, and engage human operators.</li>\n</ul>\n\n<h2>De-risking changes</h2>\n\n<p>Change is both inevitable and beneficial given the need to deploy service updates and improvements, and to react quickly to vulnerabilities or incidents. Changes roll out gradually beginning with integration environments, canary regions, and building up to mass roll out. The change process is declarative through our Zero Touch Operations systems. The validation cycle uses Open Network Emulator for a complete emulation of the global network, and our Real time Operation Checker validates the risk of each change to the network.</p>\n\n<h2>Open Network Emulator (ONE)&mdash;software emulation of the network</h2>\n\n<p>When astronauts prepare for space missions, they practice each move and test every procedure on high-fidelity emulators. Similarly, when we make a change to our network, we validate it on high-fidelity network emulators. The entire global network can be instantiated in a software emulation environment called One Network Emulator (ONE). Network devices are emulated with images of their software running in containers and virtual machines in Azure. Multiple network devices are emulated on a single host, which enables us to instantiate the entire network for large scale testing. Network links are emulated with Virtual Extensible LAN (VXLAN) tunnels. Network topology and device configurations are downloaded from production configuration systems. Software controllers interact with ONE, oblivious that they are interacting with emulated devices. ONE allows us to do large scale tests before entering production. Every team has its independent ONE environment for continuous integration. ONE can also interoperate with real devices and be used to test the actual hardware.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/daf3df45-6fdf-4dca-b741-d5a6c0f7779a.png\"><img alt=\"Azure Global Network emulator.\" border=\"0\" height=\"437\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/546a3434-ce05-4117-8a79-a21e144686c7.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"Azure Global Network emulator.\" width=\"1024\"></a></p>\n\n<p>&nbsp;</p>\n\n<p>Imagine that a team wants to upgrade network device software, deploy a patch, make a new configuration change, or deploy new controller software. The entire method of procedure to perform the change and roll back the change is tested in ONE. ONE has surfaced bugs in configuration, device software, inter-operability between devices, and scaling issues. Validation in ONE is integrated in our safe deployment framework.</p>\n\n<p>In reference to the recent service incident (<a href=\"https://status.azure.com/en-us/status/history\" target=\"_blank\">10/7 Issues accessing Microsoft and Azure services</a>) mentioned in the introduction, the incident was caused by a code defect in a version update of a component that controls network traffic routing between Azure regions, but only at production scale and scope. To catch issues like this that happen rarely, we use a pre-production validation process to force similar issues to happen frequently in a virtualized environment by performing chaos testing. In chaos testing, bursts of random failures are introduced to see whether the network recovers back to a healthy state. Since this incident, we have increased test coverage and bake time in ONE to improve the resiliency of the traffic engineering controllers.</p>\n\n<h2>Real Time Operation Checker (ROC)&mdash;network simulator</h2>\n\n<p>Real Time Operation Checker (ROC) validates the impact of any planned change or unplanned downtime to the real-time network. For example, ROC answers the question &ldquo;is it safe to offline a node or link for the next two hours?&rdquo; The answer depends on the current condition of the network, other changes that have been allowed to proceed, network demands for the next two hours, and the risk of new failures causing isolation or congestion. While ONE emulates, ROC simulates.</p>\n\n<p>ROC uses live topology and demand feeds and simulates device forwarding and queuing, and software controller behavior under failure and load scenarios. These simulations are parallelized using Azure Batch and results are available in minutes. ROC tokens are granted for human-initiated and service-initiated changes, and no network change can proceed without a ROC token. Maintenance by our fiber provider partners are also simulated in ROC to measure risk and take corrective actions in daily operations.</p>\n\n<h2>Zero Touch Operations</h2>\n\n<p>When operating a network of our size, manual configuration changes must be avoided. The network is too large for a human to watch and react to all health signals and determine if the configuration change had the intended outcome. Automated changes are delivered to the network by a software system, wrapped in pre and post checks to analyze safety and health before and after the change. Changes are rolled back immediately or blocked if health signals fail.</p>\n\n<p>Automated changes are applied using three services&mdash;internally named Fuse, Clockwerk, and WARP. Fuse&#39;s strength is performing repeatable tasks like upgrading network device software. In addition to being safer, Fuse is faster and frees up engineers. Clockwerk and WARP specialize in human-centered or ad-hoc changes. Engineers write stateful workflows to execute a sequence of changes wrapped in automatic checks and rollbacks. Users interact with the workflow over a modern web interface to provide human input within the workflow. An example of such a workflow is replacing hardware in a network device which requires traffic to be drained from the device before a technician replaces the hardware, then traffic restored back to the device in a safe manner. When changes are needed for an interactive repair operation, engineers enter their commands in a virtual console which are again peer reviewed and wrapped inside safety checks before sending to the devices. These systems all work together to eliminate the need to make a manual change.</p>\n\n<p>All automated changes leverage the ROC framework as well as a myriad of canaries, monitors, and other health signals to analyze changes constantly to ensure the intent was delivered without adverse impact to customers&mdash;enabling a roll back at the slightest hint of impact.</p>\n\n<h2>Capacity planning</h2>\n\n<p>Capacity prediction and deployment velocity is vital to providing maximum reliability and performance. In our highway system analogy, capacity planning is about determining where to add lanes or new highways, how many to add, when they should be ready for traffic, and which ones to close.</p>\n\n<p>Our capacity planning process begins by setting the topology of the network. The Topology Analysis system uses availability metrics from our network and external sources, new Azure region buildouts, and outside-in latency measurements, to generate future topologies. A demand prediction platform generates traffic matrices for multiple months using different algorithms, scores them against actuals, and creates a blended forecast. Optimized Repeatable Compiler for Augmentation Support (ORCAS) runs large-scale network simulations for future demands and topology. ORCAS programmatically assesses reliability, utilization, and efficiency and proposes how to evolve the network across more than 120,000 backbone routes and 6,000 <a href=\"https://en.wikipedia.org/wiki/Shared_Risk_Resource_Group\" target=\"_blank\">shared risk link groups</a> (SRLG).</p>\n\n<p>Thousands of failure scenarios, involving multiple failing entities, are simulated along with the reaction of the traffic management controllers to determine the capacity needed for the worst-case failures. Historical performance data such as mean-time-between-failure (MTBF) and mean-time-to-repair (MTTR) are used to optimize the capacity requirement in both the short and long term. This signal is fed into our capacity workflow automation engine to complete the capacity delivery in a timely manner. This end-to-end system was used extensively to respond to the <a href=\"https://azure.microsoft.com/en-us/blog/azure-responds-to-covid19/\" target=\"_blank\">demand surge from COVID-19</a> and delivered 110 Tbps of additional backbone capacity in less than two months.</p>\n\n<p>Optical fiber path diversity is extremely important to ensure reliable capacity. Fiber paths are like the pavement that supports the roads; flooded pavement affects all roads using it. Geo spatial information on fiber paths and other metadata on fiber cross points, power, and conduits is used to compute shared risks. We actively track the coverage of this data and maintain freshness in partnership with our fiber partners.</p>\n\n<h2>Conclusion</h2>\n\n<p>Reliable network connectivity is essential for a seamless, always-on cloud service experience. We have built a software driven cloud-scale network that gives us more flexibility and control to support the rapid growth and constantly evolving nature of cloud demands.</p>\n\n<p>In part two, we&rsquo;ll go deeper into software-managed traffic management, optimizing last mile resilience, detecting and remediating route anomaly detection, bandwidth broker Quality of Service (QoS), and continuous monitoring.</p>\n\n<p><em>Read <a href=\"https://azure.microsoft.com/en-us/blog/advancing-global-network-reliability-through-intelligent-software-part-2-of-2/\">Advancing global network reliability through intelligent software part 2</a>.</em></p>\n"
}