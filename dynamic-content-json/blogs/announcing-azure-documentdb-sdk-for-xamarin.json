{
    "Slug": "announcing-azure-documentdb-sdk-for-xamarin",
    "Title": "How To Build Planet Scale Mobile App in Minutes with Xamarin and DocumentDB",
    "Summary": "Today we are excited to announce Azure DocumentDB SDK for Xamarin mobile platform, enabling mobile apps to interact directly with DocumentDB.",
    "Content": "<p><strong>As of May 10th 2017,</strong></p>\n\n<p><strong>Azure Cosmos DB is Microsoft&rsquo;s globally distributed multi-model database. Azure Cosmos DB was built from the ground up with global distribution and horizontal scale at its core. It offers turnkey global distribution across any number of Azure regions by transparently scaling and replicating your data wherever your users are. Elastically scale throughput and storage worldwide, and pay only for the throughput and storage you need. Azure Cosmos DB guarantees single-digit-millisecond latencies at the 99th percentile anywhere in the world, offers multiple well-defined consistency models to fine-tune performance, and guarantees high availability with multi-homing capabilities&mdash;all backed by industry leading service level agreements (SLAs).&nbsp;</strong></p>\n\n<p><strong>Azure Cosmos DB is truly schema-agnostic; it automatically indexes all the data without requiring you to deal with schema and index management. It&rsquo;s also multi-model, natively supporting document, key-value, graph, and column-family data models. With Azure Cosmos DB, you can access your data using APIs of your choice, as DocumentDB SQL (document), MongoDB (document), Azure Table Storage (key-value), and Gremlin (graph) are all natively supported.</strong></p>\n\n<hr>\n<p>Most mobile apps need to store data in the cloud, and&nbsp;<a href=\"https://azure.microsoft.com/services/documentdb/\">Azure DocumentDB</a> is an awesome cloud database for mobile apps. It has everything a mobile developer needs, a fully managed NoSQL database as a service that scales on demand, and can&nbsp;bring your data&nbsp;where your users go around the globe -- completely transparently to your application.&nbsp;Today we are excited to announce Azure DocumentDB SDK for Xamarin mobile platform, enabling mobile apps&nbsp;to&nbsp;interact directly with DocumentDB, without a middle-tier.</p>\n\n<p>Here is what mobile developers get out of the box with DocumentDB:</p>\n\n<p><a href=\"file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/DocDB%20Xamrin_300[10].png\"><img alt=\"DocDB Xamrin_300\" border=\"0\" height=\"307\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/40d64dd3-e8a7-428b-a7a5-451346b2a055.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"DocDB Xamrin_300\" width=\"542\"></a></p>\n\n<ul>\n <li><strong>Rich queries over schemaless data</strong>. DocumentDB stores data as schemaless JSON documents in heterogeneous collections, and offers <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-sql-query\">rich and fast queries </a>without the need to worry about schema or indexes.</li>\n <li><strong>Fast. Guaranteed.</strong>&nbsp;It takes only&nbsp;few milliseconds to&nbsp;read and write documents&nbsp;with DocumentDB. Developers&nbsp;can specify&nbsp;the throughput they need and DocumentDB will honor it with 99.99% SLA.</li>\n <li><strong>Limitless Scale.</strong> Your DocumentDB collections <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-partition-data\">will grow as your app grows</a>. You can start with small data size and 100s requests per second and grow to arbitrarily large, 10s and 100s of millions requests per second throughput, and petabytes of data.</li>\n <li><strong>Globally Distributed.</strong> Your mobile app users are on the go, often across the world. DocumentDB is a <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-distribute-data-globally\">globally distributed database</a>, and with just one click on a map it will bring the data wherever your users are.</li>\n <li><strong>Built-in rich authorization.</strong> With DocumentDB you can easy to&nbsp;implement popular patterns like <a href=\"https://github.com/Azure/azure-cosmosdb-dotnet/tree/master/samples/xamarin/UserItems\">per-user data</a>, or multi-user shared data without custom complex authorization code.</li>\n <li><strong>Geo-spatial queries.</strong> Many mobile apps offer geo-contextual experiences today. With the first class support for <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-geospatial\">geo-spatial types</a> DocumentDB makes these experiences very easy to accomplish.</li>\n <li><strong>Binary attachments.</strong> Your app data often includes binary blobs. Native support for attachments makes it easier to use DocumentDB as one-stop shop for your app data.</li>\n</ul>\n\n<p>Let&#39;s build an app together!</p>\n\n<h3>Step #1. Get Started</h3>\n\n<p>It&#39;s easy to get started with DocumentDB, just go to Azure portal, create a new DocumentDB account,&nbsp; go to the Quickstart tab, and download a Xamarin Forms&nbsp;todo list sample, already connected to your DocumentDB account.&nbsp;</p>\n\n<p><a href=\"file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/image[23].png\"><img alt=\"image\" border=\"0\" height=\"407\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e02f5429-4209-495e-98fe-718fc11970d6.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"image\" width=\"543\"></a></p>\n\n<p>Or if you have an existing Xamarin app, you can just add this <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-sdk-dotnet-core\" target=\"_blank\"><u>DocumentDB NuGet package</u></a>. Today we support Xamarin.IOS, Xamarin.Android, as well as Xamarin Forms shared libraries.</p>\n\n<h3>Step #2. Work with data</h3>\n\n<p>Your&nbsp;data records are stored in DocumentDB as schemaless JSON documents in heterogeneous collections. You can store documents with different structures in the same collection.</p>\n\n<p><a href=\"file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/Screenshot%202017-01-23%2014.44.12[5].png\"><img alt=\"Screenshot 2017-01-23 14.44.12\" border=\"0\" height=\"29\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9e3eb8d4-c7e2-4f1c-a51f-f6f44aaa685e.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"Screenshot 2017-01-23 14.44.12\" width=\"764\"></a></p>\n\n<p>In your Xamarin projects you can use language integtated queries over schemaless data:</p>\n\n<p><a href=\"file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/Screenshot%202017-01-23%2014.47.29[4].png\"><img alt=\"Screenshot 2017-01-23 14.47.29\" border=\"0\" height=\"157\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/94ff379a-5e0f-4981-bb02-5efd0c970a2c.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"Screenshot 2017-01-23 14.47.29\" width=\"725\"></a></p>\n\n<h3>Step #3. Add&nbsp;Users</h3>\n\n<p>Like many get started samples, the DocumentDB sample you downloaded above authenticates to the service using master key hardcoded in the app&#39;s code. This is of course not a good idea for an app you intend to&nbsp;run anywhere except your local emulator. If an attacker gets a hold of the master key, all the data across your DocumentDB account is compromised.</p>\n\n<p>Instead&nbsp;we want&nbsp;our app to only have access to the records&nbsp;for the logged in&nbsp;user. DocumentDB allows developers to grant application read or read/write access to all documents&nbsp;in a&nbsp;collection, a set of documents, or a&nbsp;specific document, depending on the needs.</p>\n\n<p>Here is for example, how to modify our todo list app into a multi-user todolist app, a complete version of the sample is <a href=\"https://github.com/Azure/azure-cosmosdb-dotnet/tree/master/samples/xamarin/UserItems\">available here</a>:&nbsp;</p>\n\n<ul>\n <li>Add Login to your app, using Facebook, Active Directory or any other provider.</li>\n <li>Create a DocumentDB UserItems collection&nbsp;with&nbsp;/userId as a partition key. Specifying partition key for your collection&nbsp;allows&nbsp;DocumentDB&nbsp;to scale infinitely as the number of our app users growth, while offering fast queries.</li>\n <li>Add DocumentDB Resource Token Broker, a simple Web API that authenticates the&nbsp;users and&nbsp;issues short lived tokens to the logged in users with access only to the documents within the user&#39;s partition. In this example we host Resource Token Broker in App Service.</li>\n <li>Modify the app to authenticate to Resource Token Broker with Facebook and request the resource tokens for the logged in Facebook user, then access users data in the UserItems collection.&nbsp;&nbsp;</li>\n</ul>\n\n<p>This diagram illustrates&nbsp;the solution. We are&nbsp;investigating eliminating the need for&nbsp;Resource Token Broker by supporting OAuth&nbsp;in&nbsp;DocumentDB first class, please upvote this <a href=\"https://feedback.azure.com/forums/263030-documentdb/suggestions/17824504-built-in-oauth-support\">uservoice item</a> if you think it&#39;s a good idea!</p>\n\n<p><a href=\"file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/tokenbroker[4].png\"><img alt=\"tokenbroker\" border=\"0\" height=\"462\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cd40d5fa-bf7b-49e7-a7d5-d7f90a6b8cef.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"tokenbroker\" width=\"476\"></a></p>\n\n<p>Now&nbsp;if we&nbsp;want two users get access to the same todolist, we just add additional permissions to the access token in Resource Token Broker.&nbsp;You can find the complete sample<a href=\"https://github.com/Azure/azure-cosmosdb-dotnet/tree/master/samples/xamarin/UserItems\"> here</a>.</p>\n\n<h3>Step #4. Scale on demand.</h3>\n\n<p>DocumentDB is a managed database as a service.&nbsp;As your user base grows, you don&#39;t need to worry about provisioning VMs or&nbsp;increasing cores. All you need to tell DocumentDB is&nbsp;how many&nbsp;operations per second (throughput) your app&nbsp;needs. You can specify the throughput via portal Scale tab using a measure of throughput called <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-manage#request-units-and-database-operations\" rel=\"nofollow\"><u>Request Units per second</u></a> (RUs). For example, a read operation on a 1KB document requires 1 RU.&nbsp;You can also add&nbsp;alerts for &quot;Throughput&quot; metric to monitor the traffic growth and programmatically change the throughput&nbsp;as alerts fire.</p>\n\n<p><a href=\"file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/image[13].png\"><img alt=\"image\" border=\"0\" height=\"263\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/03d46429-0b0f-4cb8-8252-9c27856a5632.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"image\" width=\"557\"></a>&nbsp;&nbsp;</p>\n\n<h3>Step #5. Go Planet Scale!</h3>\n\n<p>As your app gains popularity, you may acquire users accross the globe. Or may be&nbsp;you just&nbsp;don&#39;t want to be caught of guard if a meteorite strkes the Azure data centers where you created your DocumentDB collection. Go to Azure portal, your DocumentDB account, and with a click on a map, make your data continuously replicate to any number of regions accross the world. This ensures your data is available whereever your users are, and you can add failover policies to be prepared for the rainy day.</p>\n\n<p><a href=\"file:///C:/Users/kirillg/AppData/Local/Temp/WindowsLiveWriter1286139640/supfilesDBC6246/image[18].png\"><img alt=\"image\" border=\"0\" height=\"347\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/497caddf-0d3f-4ebf-bfc2-e3a4927e2133.png\" style=\"border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"image\" width=\"559\"></a></p>\n\n<p>We hope you find this blog and samples useful to take advantage of DocumentDB in your Xamarin application. Similar pattern can be used in Cordova apps using DocumentDB JavaScript SDK, as well as native iOS / Android apps using DocumentDB REST APIs.</p>\n\n<p>As always, let us know how we are doing and what improvements you&#39;d like to see going forward for DocumentDB through <a href=\"https://feedback.azure.com/forums/263030-documentdb\"><u>UserVoice</u></a>, StackOverflow <a href=\"https://stackoverflow.com/questions/tagged/azure-documentdb\"><u>#azure-documentdb</u></a>, or Twitter <a href=\"https://twitter.com/documentdb\"><u>@DocumentDB</u></a>.</p>\n"
}