{
    "Slug": "additional-updates-to-support-site-extension-for-azure-app-service-web-apps",
    "Title": "Additional updates to Support Site Extension for Azure App Service Web Apps",
    "Summary": "With this most recent update, you now have the ability to access Support Site Extension features right from the Azure Preview Portal.",
    "Content": "<a href=\"https://azure.microsoft.com/blog/2014/12/01/new-updates-to-support-site-extension-for-azure-websites/\" target=\"_blank\">Previous updates to Support Site Extension</a> included features like Live HTTP traffic monitoring,  Event Viewer, Role Metrics for a Web App per Instance, Notifications, ClearDB health checks etc. We're excited to add to the list with this recent update!\n<h2>Access to Support Site Extension</h2>\nWith this most recent update, you now have the ability to access Support Site Extension features right from the <a href=\"https://portal.azure.com\" target=\"_blank\">Azure Preview Portal</a>. To access these features for a given Web App, simply click on “<strong>Settings</strong>” for your Web App  –&gt; Select “<strong>Troubleshoot</strong>” from the settings blade  –&gt;  Click on the feature you want to explore.\n\n&nbsp;\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/06/04/SupportSiteExtensionDeepLinks.png\"><img style=\"background-image: none; float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; display: block; padding-right: 0px; border-width: 0px;\" title=\"SupportSiteExtensionDeepLinks\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/SupportSiteExtensionDeepLinks_thumb.png\" alt=\"SupportSiteExtensionDeepLinks\" width=\"610\" height=\"375\" border=\"0\" /></a>\n\n&nbsp;\n<h2>Configure Using your User Interface</h2>\n<a href=\"https://azure.microsoft.com/blog/2014/02/06/auto-healing-windows-azure-web-sites/\">Auto Healing </a>has been one of our most popular features for Azure App Service Web Apps. Previously, you had to manually configure this feature inside your web.config file. With this recent update, you can now use User Interface (UI) to configure auto healing for your Web Apps.\n<blockquote><strong>Note</strong>: You can read more about the Auto Heal feature <a href=\"https://azure.microsoft.com/blog/2014/02/06/auto-healing-windows-azure-web-sites/\" target=\"_blank\">Here</a>.</blockquote>\nQuick summary on how to use the UI:\n<ol>\n <li>From Azure Preview Portal, select the “<strong>Mitigate</strong>” option for the <strong>Troubleshoot</strong> blade (as shown above). This will single sign you into <strong>Mitigate</strong> section of Support Site Extension for a given Web App.</li>\n <li>By Default the feature is <strong>OFF</strong>. To start adding rules (triggers), turn the feature <strong>ON.</strong></li>\n <li>If you have been using this feature previously, by having the rules configured in your Web.config file (manually) then.\n<ul>\n <li>This UI will not detect and reflect those rules. (You have an option to remove those rules from your web.config file and configure it again using UI and they will be picked up from here on out)</li>\n <li>Those rules are still effective and will take precedence over any new rules you set using UI.</li>\n <li>If you set multiple/duplicate rules using UI and Web.config file then the ones in Web.config will take precedence.</li>\n</ul>\n</li>\n <li>Once the feature is turned ON, you will be able to add any rule of your choice by clicking on “Add Rule” button. To learn more about different rules/triggers please see my <a href=\"https://azure.microsoft.com/blog/2014/02/06/auto-healing-windows-azure-web-sites/\" target=\"_blank\">original blog on Auto Healing</a>.</li>\n <li>As you add rules, the UI will guide you to set an “<strong>Action</strong>”. Choose an action of your choice from <strong>Recycle</strong>, <strong>Log Event</strong> or <strong>Custom Action</strong>.\n<blockquote><strong>Note</strong>: The default custom action populated is simply using DaaS command line, indicating: When any rule is hit, collect the process “Memory Dumps” –&gt;  Kill the process that is suspected to be in bad stated –&gt; Analyze the data (Memory Dump in this case). This is great way to automatically detect bad situations with your Web App, Collect the data, recycle to recover and analyze the data to build the report for you to read.</blockquote>\n</li>\n <li>You can add as many rules as you want, but there can only be one action defined. You can add new rules in web.config file manually and those can have it’s independent action and will be honored ahead of the ones set using UI.</li>\n <li>To delete the rule simply click on “<strong>X</strong>” sign.</li>\n <li>Do not forget to hit “<strong>Update</strong>” after settings rules and actions, as nothing gets saved unless you ask for it.</li>\n</ol>\n&nbsp;\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/06/04/AutoHealUX.png\"><img style=\"background-image: none; float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; display: block; padding-right: 0px; border-width: 0px;\" title=\"AutoHealUX\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AutoHealUX_thumb.png\" alt=\"AutoHealUX\" width=\"610\" height=\"348\" border=\"0\" /></a>"
}