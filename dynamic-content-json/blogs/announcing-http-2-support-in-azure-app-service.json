{
    "Slug": "announcing-http-2-support-in-azure-app-service",
    "Title": "Announcing HTTP/2 support in Azure App Service",
    "Summary": "The Azure App Service team is happy to announce the global deployment of support for the HTTP/2 protocol for all apps hosted on App Service. HTTP/2 has been the top customer request we have received, and we are excited to light up support!",
    "Content": "<p>The Azure App Service team is happy to announce the global deployment of support for the HTTP/2 protocol for all apps hosted on App Service. HTTP/2 has been the <a href=\"https://feedback.azure.com/forums/169385-web-apps/suggestions/9552936-enable-http-2-on-azure-web-apps\">top customer request</a> we have received, and we are excited to light up support!</p>\n\n<h2>What is HTTP/2?</h2>\n\n<p>HTTP/2 is a rework of how HTTP semantics flow over TCP connections, and HTTP/2 support is present in Windows 10 and Windows Server 2016. HTTP/2 is a major upgrade after nearly two decades of HTTP/1.1 use and reduces the impact of latency and connection load on web servers.</p>\n\n<p>The major advance of HTTP/1.1 was the use of persistent connections to service multiple requests in a row. In HTTP/2, a persistent connection can be used to service multiple simultaneous requests. In the process, HTTP/2 introduces several additional features that improve the efficiency of HTTP over the network.</p>\n\n<h2>One connection for multiple requests</h2>\n\n<p>Every TCP connection requires a round trip to set up. If you&rsquo;re using encryption, the TLS handshake takes another 1-2 round trips. All this happens before the first byte of the first response can be sent. By reusing an existing connection instead of setting up a new one, this overhead can be shared by many requests. HTTP/2 sharply reduces the need for a request to wait while a new connection is established, or wait for an existing connection to become idle. Because a single connection is multiplexed between many requests, the request can usually be sent immediately without waiting for other requests to finish.</p>\n\n<h2>Header compression with HPACK</h2>\n\n<p>HTTP has supported compression of data for ages. Headers, however, are sent as uncompressed text, with a lot of redundancy between requests. (Many of the longest headers are sent with exactly the same value on every request!) HTTP/2 introduces HPACK, a compression scheme for HTTP headers which reduces the redundancy between requests.</p>\n\n<p>Compression also helps multiplexing, because requests are smaller. This enables clients to make many requests in their first packets on a connection, while TCP flow control windows are still small.</p>\n\n<h2>What are the key differences from HTTP/1.x?</h2>\n\n<ul>\n <li>HTTP/2 is binary</li>\n <li>Fully multiplexed, instead of ordered and blocking</li>\n <li>Ability to use one connection for parallelism</li>\n <li>Has one TCP/IP connection</li>\n <li>Uses header compression to reduce overhead</li>\n</ul>\n\n<h2>What action do App Service users need to take?</h2>\n\n<p>All you need is a just a simple configuration! HTTP/2 is disabled by default for all customers. However, if you would like to opt-in and apply HTTP/2 for your site, follow the steps below:</p>\n\n<p>Through the Azure portal, browse to your app and search for the &ldquo;Application settings&rdquo;, where you will find the setting called &ldquo;HTTP Version&rdquo;. Select 1.1 or 2.0 by your needs.<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ff48317e-c958-4b72-a8b7-652862ab8d1e.png\"><img alt=\"image1\" border=\"0\" height=\"402\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e657701e-071e-4989-b25b-3da79ea85dea.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"image1\" width=\"676\"></a></p>\n\n<p>You may also browse to the Azure Resource Explorer using one of the following steps:</p>\n\n<p>1. In the <a href=\"https://portal.azure.com/\">Azure portal</a>, select &ldquo;Resource explorer&rdquo; in your App Service app&rsquo;s menu.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/625e147e-e40b-46d7-aaa7-d8ca043b8425.png\"><img alt=\"image2\" border=\"0\" height=\"303\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a64fd7a3-d21c-4f6a-9155-ef684049e541.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image2\" width=\"282\"></a></p>\n\n<p>Then select &quot;Go.&quot;</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1c6c6af9-d8fe-403c-a4d3-acc42246312d.png\"><img alt=\"image3\" border=\"0\" height=\"123\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a045e22d-0e8e-4f7e-978b-0448b15d7687.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image3\" width=\"558\"></a></p>\n\n<p>2. Alternatively, browse directly to Resource Explorer (<a href=\"https://resources.azure.com/\">https://resources.azure.com/</a>).</p>\n\n<p>The advantage of going through the Azure portal route is that the browser will be automatically navigated to your requested app&rsquo;s configuration, then you just have to navigate to config &gt; web, where you will find the needed value to update.</p>\n\n<p>If browsing directly to Resource Explorer, drill down through the tree hierarchy to your site using the following path:</p>\n\n<p>Subscription &gt; Resource Group &gt; your site name &gt; Providers &gt; Microsoft.Web &gt; sites &gt; your site name &gt; config &gt; web</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4a0fd4b1-6436-4f2f-9952-2e32bfc1de3b.png\"><img alt=\"image4\" border=\"0\" height=\"482\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/860ad793-b411-4df2-859a-635fb252c9c1.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image4\" width=\"328\"></a></p>\n\n<p>On the top of the page make sure you&rsquo;re in Read/Write mode:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c0b9251e-c5f1-47df-9438-44fb1a39990c.png\"><img alt=\"image5\" border=\"0\" height=\"46\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/934d8b5e-9591-4868-9024-5076d96a9a41.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image5\" width=\"489\"></a></p>\n\n<p>Select Edit:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/98904bda-1e06-45ff-ba1c-231cda1ccc84.png\"><img alt=\"image6\" border=\"0\" height=\"58\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ee59fde8-4cde-42e3-92e2-3a639dd67e64.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image6\" width=\"140\"></a></p>\n\n<p>Find the parameter for HTTP/2:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/02290bfb-aabb-4e5a-aaaf-71aca491b1d7.png\"><img alt=\"image7\" border=\"0\" height=\"22\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/497251b8-1830-44a3-9217-ddc37dbc88b2.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image7\" width=\"196\"></a></p>\n\n<p>Type in &lsquo;<strong>true</strong>&rsquo; in place of &lsquo;false&rsquo;:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0dafcc2b-e089-4c16-b13f-6c447482052e.png\"><img alt=\"image8\" border=\"0\" height=\"22\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a9dce0ff-033f-4de8-a726-a7965545de4f.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image8\" width=\"195\"></a></p>\n\n<p>On the top, select &lsquo;PUT&rsquo;:</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f3d758f0-402b-4d57-b2df-06c320309aae.png\"><img alt=\"image9\" border=\"0\" height=\"56\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8a7344dd-d393-4f11-a292-1e70375d65b3.png\" style=\"border: 0px currentcolor; border-image: none; display: inline; background-image: none;\" title=\"image9\" width=\"256\"></a></p>\n\n<p>You&rsquo;re done!</p>\n\n<ul>\n <li>Support for HTTP/2 in App Service Environments and the Azure National Clouds is available as well!</li>\n</ul>\n\n<h2>HTTP/2 Browser Support Requires SSL</h2>\n\n<p>Most modern browsers only support using the HTTP/2 protocol over SSL, while non-SSL traffic continues to use HTTP/1.1. App Service makes it easy to get up and running with SSL. <a href=\"https://docs.microsoft.com/en-us/azure/app-service/web-sites-purchase-ssl-web-site\">Learn how to configure</a> a new SSL cert for your app, or learn how to <a href=\"https://docs.microsoft.com/en-us/Azure/app-service/app-service-web-tutorial-custom-ssl\">bind an existing SSL cert</a> to your app. App Service also provides a default level of SSL functionality for all apps via a common wildcard SSL certificate bound to the <em>*.azurewebsites.net</em> domain. Regardless of which approach you choose, your apps will need to run over SSL to enjoy the benefits of HTTP/2 with modern browsers.</p>\n\n<ul>\n <li>Ask a question on the developer forums: <a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=windowsazurewebsitespreview\">MSDN</a> or <a href=\"https://stackoverflow.com/questions/tagged/azure-web-app-service\">Stack Overflow</a></li>\n <li>Open a <a href=\"https://portal.azure.com/\">support ticket</a></li>\n</ul>\n"
}