{
    "Slug": "announcing-powershell-script-support-azure-automation-2",
    "Title": "Announcing Native PowerShell Script Support in Azure Automation",
    "Summary": "Learn about the new PowerShell runbook type in Azure Automation, and how it can make automation across clouds and on-premises datacenters easier.",
    "Content": "<p><span style=\"font-size:14px;\"><strong>Update 10/19/2015</strong> - The below blog post says &quot;<span style=\"color: rgb(80, 80, 80); text-transform: none; line-height: 21px; text-indent: 0px; letter-spacing: normal; font-family: wf_segoe-ui_normal, &quot;Segoe UI&quot;, &quot;Segoe WP&quot;, Tahoma, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; word-spacing: 0px; float: none; display: inline !important; white-space: normal; widows: 1; background-color: rgb(255, 255, 255); -webkit-text-stroke-width: 0px;\">Hybrid runbook worker support for PowerShell runbooks is coming soon.&quot; This is now implemented. Native PowerShell runbooks can now be run on hybrid runbook workers!</span></span></p>\n\n<p>&nbsp;</p>\n\n<p>If you&rsquo;re familiar with the <a href=\"https://azure.microsoft.com/en-us/services/automation/\" target=\"_blank\">Azure Automation</a> service, you know it&rsquo;s a wonderful tool for reliably automating all the manual, long-running, error-prone, and frequently repeated tasks needed to keep your IT infrastructure in the cloud and on-premises up and running. But you&rsquo;re probably also aware Azure Automation doesn&rsquo;t actually execute pure PowerShell, it executes <a href=\"https://blogs.technet.com/b/heyscriptingguy/archive/2012/12/26/powershell-workflows-the-basics.aspx\" target=\"_blank\">PowerShell Workflow</a>.</p>\n\n<p>There are a&nbsp;lot of benefits to PowerShell Workflow. In addition to allowing you to leverage the semantics, modules, knowledge, content, and community around PowerShell, it also gives you access to the power of Windows Workflow Foundation.&nbsp;With Windows Workflow Foundation&nbsp;you&nbsp;have the ability to checkpoint, suspend, and resume your runbooks to better handle logic, environment, or network failures, as well as the ability to easily execute things in parallel or serially.</p>\n\n<p>But, like with most things in life, you don&rsquo;t get the good without the bad! While PowerShell Workflow is very similar to regular PowerShell, it does have some <a href=\"https://technet.microsoft.com/en-us/magazine/dn151046.aspx\" target=\"_blank\">differences and limitations</a> to allow for some of the additional features it adds.&nbsp;For example,&nbsp;wouldn&rsquo;t it be nice if we could just take things we&rsquo;ve already written as PowerShell scripts, or use only our existing PowerShell knowledge, and with just that get up and running in Azure Automation?</p>\n\n<p>Well, today&rsquo;s your lucky day. Azure Automation now includes another runbook type besides PowerShell Workflow and Graph &ndash; <b>PowerShell</b>. PowerShell runbooks have the same lifecycle, capabilities and management as other runbook types, but&nbsp;allows you to&nbsp;run native PowerShell in Azure Automation.</p>\n\n<p>To get started using native PowerShell runbooks in your Automation accounts, just go to the <a href=\"https://portal.azure.com\" target=\"_blank\">Azure preview portal</a>, select an Automation account, click Runbooks &gt; Add Runbook, then either create a new PowerShell runbook or import an existing PowerShell script.</p>\n\n<p><img alt=\"Adding a PowerShell script runbook to Azure Automation\" border=\"0\" height=\"300\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2ed1ceed-2766-487f-994e-ac1e36ef6d53.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Adding a PowerShell script runbook to Azure Automation\" width=\"610\"></p>\n\n<p>&nbsp;</p>\n\n<p>Just like other runbook types, PowerShell runbooks can use Automation assets, be hooked up to schedules and webhooks, and call runbooks inline. Hybrid runbook worker support for PowerShell runbooks is coming soon. Right now, you can only invoke inline PowerShell runbooks from PowerShell runbooks, and PowerShell Workflow or Graph runbooks from PowerShell Workflow or Graph runbooks. This may change in the future. In addition, you can always use Start-AzureAutomationRunbook to start a runbook of any type from your runbook, it will just be started as a separate job.</p>\n\n<p>Invoking a PowerShell runbook inline from another PowerShell runbook also has a slightly different syntax than you&rsquo;d use in PowerShell Workflow runbooks. To match local PowerShell:</p>\n\n<p><u>PowerShell Workflow runbook</u></p>\n\n<blockquote>\n<p><i>MyChildPswfRunbook &ndash;Parameter1 &ldquo;Value1&rdquo;</i></p>\n</blockquote>\n\n<p><u>PowerShell runbook</u></p>\n\n<blockquote>\n<p>.\\<i>MyChildPSRunbook.ps1 &ndash;Parameter1 &ldquo;Value1&rdquo;</i></p>\n</blockquote>\n\n<p>Let&rsquo;s take it for a spin, shall we? As you can see, PowerShell runbooks can be edited in Azure Automation (or locally), just like their PowerShell Workflow brethren.</p>\n\n<p><img alt=\"Editing a PowerShell script runbook in Azure Automation\" border=\"0\" height=\"271\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/790d3668-d8cb-4e12-b9d3-e7fe9058ea39.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Editing a PowerShell script runbook in Azure Automation\" width=\"610\"></p>\n\n<p>&nbsp;</p>\n\n<p>And not only do they run, they run, <b>fast</b>! Unlike PowerShell Workflows, which have a compile step whose time-taken scales as the size of the runbook and number of inline runbooks grows, PowerShell runbooks have no compile step at all since they are PowerShell, not PowerShell Workflow. The execution below, for example, went from start-button-clicked to running in&nbsp;five seconds!</p>\n\n<p><img alt=\"Running a PowerShell script runbook in Azure Automation\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/eeea1bd0-1b9f-4513-91dc-a11089ed6dfa.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Running a PowerShell script runbook in Azure Automation\" width=\"610\"></p>\n\n<p>&nbsp;</p>\n\n<p>You may be asking yourself, &ldquo;Why should I ever use PowerShell Workflow runbooks again?&rdquo; Yes, I can read minds. But I can also give you some good advice &ndash; while PowerShell runbooks are simple and fast, they don&rsquo;t give you the unique functionality of PowerShell Workflow (namely, parallel, checkpoints, and suspend/resume). Without parallel, this means PowerShell runbooks can only execute commands serially. And without checkpoints and suspend/resume-ability, PowerShell runbooks can&rsquo;t resume from any point in the runbook other than the beginning if they hit a logic, environment, network failure, or our <a href=\"https://azure.microsoft.com/en-us/documentation/articles/automation-runbook-execution/#fair-share\" target=\"_blank\">fair share</a> limit. Also, graph runbooks created with Automation&rsquo;s graphical editor, let you visualize your process automation as you create it, test, and run it.</p>\n\n<p>The choice of what types of runbooks to use is yours. There are&nbsp;definitely scenarios where each type of runbook&nbsp;is useful,&nbsp;now you have&nbsp;the power to make that choice. I&rsquo;m very excited to be able to introduce this feature, and hope you&#39;re excited to learn about it.</p>\n\n<p>Until next time &ndash; keep calm and automate on &ndash; with PowerShell runbooks!</p>\n\n<p>Just getting started with Azure Automation? Learn about the service <a href=\"https://aka.ms/Q2p1ap\" target=\"_blank\">here</a>, and follow Azure Automation on <a href=\"https://twitter.com/AzureAutomation\" target=\"_blank\">Twitter</a>.</p>\n"
}