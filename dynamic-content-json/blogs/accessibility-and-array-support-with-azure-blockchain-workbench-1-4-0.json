{
    "Slug": "accessibility-and-array-support-with-azure-blockchain-workbench-1-4-0",
    "Title": "Accessibility and array support with Azure Blockchain Workbench 1.4.0",
    "Summary": "We’ve been very grateful for the feedback you’ve given us since we first introduced Azure Blockchain Workbench in public preview a few months ago. Your feedback continues to be an essential and impactful part of our work. For this release, we focused on making Workbench more accessible for everyone.",
    "Content": "<p>We&rsquo;ve been very grateful for the feedback you&rsquo;ve given us since we first introduced <a href=\"https://aka.ms/abcworkbench\">Azure Blockchain Workbench</a> in public preview a few months ago. Your feedback continues to be an essential and impactful part of our work. For this release, we focused on making Workbench more accessible for everyone. Accessibility is a key pillar in our vision of empowering every person and every organization to achieve more. We are excited to share some of the improvements we&rsquo;ve made with accessibility in mind.</p>\n\n<p>To use 1.4, you can either deploy a new instance of Workbench through the Azure Portal or upgrade your existing deployment to 1.4.0 using our <a href=\"https://github.com/Azure-Samples/blockchain/tree/master/blockchain-workbench/scripts\">upgrade script</a>. This update includes the following improvements:</p>\n\n<h2>Better accessibility for screen readers and keyboard navigation</h2>\n\n<p>Azure Blockchain Workbench is far more than UI within client apps. Workbench provides a rich developer scaffold for you to develop and integrate blockchain solutions within your enterprise.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fe037ba3-9720-4b1f-b89d-1e52d3a2f8cd.png\"><img alt=\"architecture\" border=\"0\" height=\"874\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4c85e710-2d61-4b27-8803-2fd068641791.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"architecture\" width=\"1565\"></a></p>\n\n<p>The Web client gives you an easy to use the environment to validate, test, and view blockchain applications. The application interface is dynamically generated based on smart contract metadata and can accommodate any use case. The client application delivers a user-facing front-end to the complete blockchain applications generated by Blockchain Workbench.</p>\n\n<p>With version 1.4.0, the Web client now fully supports screen readers in terms of navigation and reading information. In addition, we updated the Web client to better support keyboard shortcuts and navigation. We hope these improvements can make you more productive when creating blockchain applications in Workbench.</p>\n\n<h2>Customization of smart contract table columns</h2>\n\n<p>Workbench dynamically creates Web client UI based on your smart contracts and application configuration. Workbench summarizes smart contract instances as a table in the Web client based on the properties specified in the application configuration. Depending on the blockchain scenario, developers may specify a lot of properties for any given application. Unfortunately, if any properties are specified, the smart contract table within the Web client UI will become hard to read due to the size and number of columns of the table, see the below image.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/78295d81-2345-42fd-9f1b-54c1e18c3dd2.png\"><img alt=\"one\" border=\"0\" height=\"1040\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/22135e0e-479d-49a4-9a6b-5577ccc3a829.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"one\" width=\"1920\"></a></p>\n\n<p>In some cases, properties may be more useful from a reporting perspective rather than a user experience perspective. To help with the readability of the smart contract tables, we&rsquo;ve introduced a new feature, which allows users to customize the smart contract table in terms of visible columns and order of columns.</p>\n\n<p>Below is a screenshot of the customized table pane, which allows each user to toggle the visibility of table columns as well as adjust the ordering of columns within the table.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4d9cd580-f217-4f04-a56b-8a93ea295e30.png\"><img alt=\"two\" border=\"0\" height=\"1040\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c9782712-920c-4452-aef7-e4d6eeff65e9.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"two\" width=\"1920\"></a></p>\n\n<p>The smart contract table view will reflect all changes applied via the customize table pane.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4c625ace-f4a1-48d8-b398-f93b9c892f29.png\"><img alt=\"three\" border=\"0\" height=\"1040\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1d811143-5847-4530-9601-811a44646593.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"three\" width=\"1920\"></a></p>\n\n<h2>New supported datatype &ndash; Arrays</h2>\n\n<p>With 1.4.0, we now support array datatypes as part of constructor and function parameters as well as smart contract properties. Arrays allow you to create blockchain apps where you can input and represent a strongly typed list of content, such as a list of numbers or values.</p>\n\n<p>Workbench currently supports static and dynamic arrays of integers, booleans, money, and time. Workbench does not yet support an array of enums or array of arrays, including strings. Note, for string support we&rsquo;re waiting for Solidity functionality to get out of preview. Let us know if these limitations are blockers for you.</p>\n\n<p>The array type is specified via the configuration file as follows:</p>\n\n<pre>\n&quot;Properties&quot;: [\n{\n   {\n            &quot;Name&quot;: &quot;PropertyType&quot;,\n            &quot;DisplayName&quot;: &quot;Property Type&quot;,\n            &quot;Type&quot;: {\n            &quot;Name&quot;: &quot;array&quot;,\n                &quot;ElementType&quot;: {\n                     &quot;Name&quot;: &quot;int&quot;\n                }\n             }\n      }\n},</pre>\n\n<p>There is a limitation is solidity when it comes to public properties related to arrays. If you have a public state variable of an array type, Solidity only allows you to retrieve single elements of the array with auto-generated getter functions. To work around this limitation, you will need to provide an appropriate function to return arrays. For example:</p>\n\n<pre>\nfunction <strong>GetPropertyTypes</strong>() public constant returns (int[]) {\n         return PropertyType;\n}</pre>\n\n<p>If this function is not part of your Solidity code, we will show an error when uploading your blockchain application.</p>\n\n<h2>Support for strings up to 4k characters</h2>\n\n<p>One of the limitations in Workbench is the data type strings can only be 256 characters. We&rsquo;ve received feedback from folks who wanted us to increase the limit. With 1.4.0, the new limit is 4,000 characters. Note, using more characters will result in using more gas when processing transactions. When building your smart contracts, please be aware of the block gas limit and build your smart contracts with that limit in mind.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6db431b7-75c0-43eb-9134-fccdbc410a51.png\"><img alt=\"four\" border=\"0\" height=\"1040\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/85ef1cf4-8f2e-4a3d-9d26-fd64da3356e2.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"four\" width=\"1920\"></a></p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d9513fbc-4d5d-4918-850f-cd8eab8171c3.png\"><img alt=\"five\" border=\"0\" height=\"1040\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3cf1ad0a-1e3e-473c-9643-35ce5d2f6d58.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"five\" width=\"1920\"></a></p>\n\n<h2>Faster and more reliable transaction processing</h2>\n\n<p>With 1.4.0, we&rsquo;ve made additional reliability improvements to the DLT Watcher microservice, see the <a href=\"https://docs.microsoft.com/en-us/azure/blockchain-workbench/blockchain-workbench-architecture\">Blockchain Workbench architecture document</a> for more information on this component. The Watcher has been rewritten and is able to process blocks at a much faster rate.</p>\n\n<p>Please use our <a href=\"https://aka.ms/blockchainuservoice\">Blockchain User Voice</a> to provide feedback and suggest features/ideas for Workbench. Your input is helping make this a great service.&nbsp; We look forward to hearing from you.</p>\n"
}