{
    "Slug": "a-hybrid-approach-to-kubernetes",
    "Title": "A hybrid approach to Kubernetes",
    "Summary": "We’re excited to see everyone at Kubecon this week! We’ve been working with our customers to understand how they’re thinking about Kubernetes and what we can do to make it easier for them.",
    "Content": "<p>We&rsquo;re excited to see everyone at Kubecon this week! We&rsquo;ve been working with our customers to understand how they&rsquo;re thinking about Kubernetes and what we can do to make it easier for them. Azure Stack unleashes new hybrid capabilities for developing applications. You design, develop, and maintain your applications just like you do with Azure and you can deploy to any of the Azure clouds. Your application&rsquo;s location becomes a configuration parameter rather than a design constraint.</p>\n\n<p>So how does Azure Stack work with containers exactly? The way that containers and hybrid cloud work together can allow you to solve many problems. You can create a set of apps in containers using the languages you love like NodeJS, Python, Ruby, and many others. You can also take advantage of the wide array of tooling available, including Visual Studio Code. You can deploy your container or set of containers to a mix of environments that meet your user&rsquo;s requirements. For instance, you can keep your sensitive data local in Azure Stack and access current functionality such as Azure Cognitive Services in global Azure. Or you can develop your apps in global Azure where you developers are and then deploy the containerized apps to a private cloud in Azure Stack that becomes completely disconnected on board a submarine. The possibilities are endless.</p>\n\n<p>Azure Stack allows you to run your containers on-premise in pretty much the same you as you do with global Azure. You can choose the best place for your containers depending on data gravity, data sovereignty, or other business needs. Containers let you use Azure Services from your host running on-premise and lets you take advantage of the secure infrastructure, integrated Role Based access Control, and seamless DevOps tools allowing you to create a single pipeline targeting multiple Azure clouds. Your containers and supporting services are hosted in a secure infrastructure that integrates with your corporate network.</p>\n\n<p>The <a href=\"https://docs.microsoft.com/en-us/azure/azure-stack/azure-stack-solution-template-kubernetes-cluster-add\" target=\"_blank\">Kubernetes Marketplace item</a> available in Preview for Azure Stack is consistent with Azure since the template is generated by the Azure Container Service Engine, the resulting cluster will run the same containers as in AKS. It also complies with the Cloud Native Foundation.</p>\n\n<p>Your developers can also use <a href=\"https://docs.microsoft.com/en-us/azure/virtual-machines/linux/openshift-azure-stack\" target=\"_blank\">Open Shift Container Platform</a> in Azure Stack. Open Shift provides a consistent container experience across Azure, Azure Stack, bare-metal, Windows, and RHEL. Open Shift brings together Microsoft and Red Hat developer frameworks and partner ecosystems as <a href=\"https://azure.microsoft.com/en-us/blog/red-hat-openshift-and-microsoft-azure-stack-together-for-hybrid-enterprise-solutions/\" target=\"_blank\">previously announced in September</a>.</p>\n\n<p>When you take your containers across Azure, Azure Stack, and Azure sovereign clouds, you should also consider that your application architecture likely depends on more than containers. Your application likely depends on numerous resources with different, specific versions. To make it easier to manage this, we recently announced the <a href=\"https://cloudblogs.microsoft.com/opensource/2018/12/04/announcing-cnab-cloud-agnostic-format-packaging-running-distributed-applications/\" target=\"_blank\">Cloud Native Application Bundles</a>, a new open source package format specification created in close partnership with Docker and broadly supported by HashiCorp, Bitnami, and more. With Cloud Native Application Bundles, you can manage distributed applications using a single installable file, reliably provision application resources in different environments, and easily manage your application lifecycle without having to use multiple tools.</p>\n\n<p>This week is KubeCon and if you are attending you can see Kubernetes and Azure Stack in action in the Expo Hall. Please drop by our booth #P18 to see great demos of the technologies I mentioned in this post.</p>\n\n<p>I hope you find the information in this post useful! Stay tuned for new topics around developing hybrid applications and feel free to follow me on <a href=\"https://twitter.com/rlfmendes\" target=\"_blank\">Twitter</a>.</p>\n\n<p>To learn more about hybrid application development, read the previous post in this series: &quot;<a href=\"https://azure.microsoft.com/en-us/blog/what-you-need-to-know-when-writing-hybrid-applications/\" target=\"_blank\">What you need to know when writing hybrid applications</a>.&quot;</p>\n"
}